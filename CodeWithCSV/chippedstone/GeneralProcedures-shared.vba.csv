1	0	Option Compare Database
2	0	Option Explicit
3	1	'******************************************************************************
4	1	' New module to hold general procedures that are shared across the diff db -easy to overwrite
5	1	'
6	1	' Intro by SAJ v.1 (on)
7	1	'******************************************************************************
8	0	
9	0	Function StartUp()
10	1	'*****************************************************************************
11	1	' All actions necessary to start the system as smoothly as possible
12	1	'
13	1	' SAJ v.1 - actions from autoexac macro plus addition of login/attachment check
14	1	'*****************************************************************************
15	0	On Error GoTo err_startup
16	0	
17	3	''DoCmd.RunCommand acCmdWindowHide 'hide the DB window from prying eyes
18	0	
19	0	DoCmd.OpenForm "Login", acNormal, , , acFormEdit, acDialog
20	0	
21	1	'you can hide the warning messages that Access popups up when
22	1	'you do sql tasks in the background - however the negative side to
23	1	'this is that you hide all these types of message which you may not
24	1	'want to do - the options you have are:
25	2	'   DoCmd.SetWarnings False 'turns off macro msgs
26	1	'   Application.SetOption "Confirm Record Changes", False
27	1	'   Application.SetOption "Confirm Document Deletions", False
28	1	   Application.SetOption "Confirm Action Queries", False  'this will hide behind the scences sql actions
29	2	'you could of course turn this on an off around each statement - I'm undecided at present
30	0	
31	1	'now the tables are all ok find out the current version
32	0	SetCurrentVersion
33	0	
34	1	'OPEN YOUR MAIN MENU HERE
35	1	DoCmd.OpenForm "Frm_CS_MainMenu", acNormal, , , acFormReadOnly 'open main menu
36	0	
37	1	'refresh the main menu so the version number appears - REPLACE WITH YOUR MENU NAME
38	0	Forms![Frm_CS_MainMenu].Refresh
39	0	
40	0	Exit Function
41	0	
42	0	err_startup:
43	0	    Call General_Error_Trap
44	1	    'now should the system quit out here?
45	1	    'to be decided
46	0	End Function
47	0	
48	0	
49	0	Sub General_Error_Trap()
50	1	'******************************************************************************
51	1	' Display general error message
52	1	'
53	1	' SAJ v.1
54	1	'******************************************************************************
55	0	
56	0	    MsgBox "The system has encountered an error. The message is as follows:" & Chr(13) & Chr(13) & Err.Description & Chr(13) & Chr(13) & "Error Code: " & Err.Number, vbOKOnly, "System Error"
57	0	
58	0	End Sub
59	0	Function GetCurrentVersion()
60	1	'******************************************************************************
61	1	' Return current interface version number - if its empty its empty do not put
62	1	' a trap to go set it as this is directly called by the main menu that appears
63	1	' before the DB links have been checked and validated (therefore if you do this
64	1	' the sql server login error will occur)
65	1	'
66	1	' SAJ v1
67	1	'******************************************************************************
68	0	On Error GoTo err_GetCurrentVersion
69	0	
70	0	    GetCurrentVersion = VersionNumber
71	0	
72	0	Exit Function
73	0	
74	0	err_GetCurrentVersion:
75	0	    Call General_Error_Trap
76	0	End Function
77	0	
78	0	Function SetCurrentVersion()
79	1	'******************************************************************************
80	1	' Return current interface version number stored in DB
81	1	'
82	1	' SAJ v9
83	1	'******************************************************************************
84	0	On Error GoTo err_SetCurrentVersion
85	0	
86	0	Dim retVal, centralver
87	0	retVal = "v"
88	0	If DBName <> "" Then
89	0	    Dim mydb As DAO.Database, myrs As DAO.Recordset
90	0	    Dim sql, theVersionNumberLocal
91	0	    Set mydb = CurrentDb()
92	0	    
93	2	    sql = "SELECT [Version_Num] FROM [Database_Interface_Version_History] WHERE [MDB_Name] = '" & DBName & "' AND not isnull([DATE_RELEASED]) ORDER BY [Version_Num] DESC;"
94	0	    Set myrs = mydb.OpenRecordset(sql, dbOpenSnapshot)
95	0	    
96	2	     '' Dim myrs As New ADODB.Recordset
97	2	   '' myrs.Open sql, CurrentProject.Connection, adOpenKeySet, adLockOptimistic
98	0	    
99	0	    If Not (myrs.BOF And myrs.EOF) Then
100	0	        myrs.MoveFirst
101	0	        
102	0	        centralver = myrs![Version_num]
103	0	        retVal = retVal & myrs![Version_num]
104	0	        
105	1	        'check local constant value held in module Globals-shared to see if this interface
106	1	        'matches current version of central copy, if not tell the user
107	2	        '2009 was a problem on PC's with where comma showing as decimal so try to capture
108	0	        theVersionNumberLocal = VersionNumberLocal
109	0	        If InStr(centralver, ",") > 0 Then centralver = Replace(centralver, ",", ".")
110	0	        If InStr(theVersionNumberLocal, ",") > 0 Then theVersionNumberLocal = Replace(theVersionNumberLocal, ",", ".")
111	0	        
112	0	        If CDbl(centralver) <> CDbl(theVersionNumberLocal) Then
113	0	            Dim msg
114	0	            msg = "There is a new version of the Chipped Stone database file available. " & Chr(13) & Chr(13) & _
115	2	                    "Please close this copy now and run 'Update Databases.bat' on your desktop or " & _
116	2	                    "copy the file 'ChippedStone Central Database.mdb' from G:\" & Year(Date) & " Central Server Databases " & _
117	2	                    " into the 'New Database Files folder' on your desktop." & Chr(13) & Chr(13) & "If you do not do this" & _
118	0	                    " you may experience problems using this database and you will not be able to utilise any new functionaility that has been added." & Chr(13) & Chr(13) & _
119	0	                    "DO NOT DO THIS IF YOU HAVE SAVED ANY NEW QUERIES INTO YOUR DESKTOP COPY OF THE DATABASE."
120	0	                    
121	0	            MsgBox msg, vbExclamation + vbOKOnly, "New version available"
122	0	        End If
123	0	    End If
124	0	    
125	0	    myrs.Close
126	0	    Set myrs = Nothing
127	0	    mydb.Close
128	0	    Set mydb = Nothing
129	0	    
130	0	  
131	0	Else
132	0	    retVal = retVal & "X"
133	0	End If
134	0	
135	0	VersionNumber = retVal
136	0	SetCurrentVersion = retVal
137	0	
138	0	Exit Function
139	0	err_SetCurrentVersion:
140	0	    Call General_Error_Trap
141	0	End Function
142	0	
143	0	Sub SetGeneralPermissions(username, pwd, connStr)
144	1	'******************************************************************************
145	1	' To make the link clearer between whether a user has only read-only rights or
146	1	' read write this code assigns a global var to flag what it knows. If the
147	1	' naming convention for users is maintained then this should work ok
148	1	'
149	1	' Alternative way to do this might be to check the DB permissions tables for
150	1	' each username
151	1	'******************************************************************************
152	0	On Error GoTo err_SetGeneralPermissions
153	0	Dim tempVal, msg, usr
154	0	
155	1	'If username = "" Then
156	1	'    tempVal = "RO"
157	1	'    msg = "Your login name is unknown to the system, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
158	1	'Else
159	1	'    usr = UCase(username)
160	1	'    If InStr(usr, "RO") <> 0 Or UCase(usr) = "CATALHOYUK" Then
161	1	'        tempVal = "RO"
162	1	'    ElseIf InStr(usr, "ADMIN") <> 0 Or usr = "RICH" Or usr = "MIA" Or usr = "SHAHINA" Or usr = "SARAH" Then
163	1	'        tempVal = "ADMIN"
164	1	'    ElseIf InStr(usr, "RW") <> 0 Then
165	1	'        tempVal = "RW"
166	1	'    Else
167	1	 '       tempVal = "RO"
168	1	'        msg = "The system is unsure of the rights of your login name so you have been assigned " & _
169	1	'                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
170	2	'                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
171	2	'                username & "' does not fall into any of the known types, please update the " & _
172	1	'                "SetGeneralPermissions code"
173	1	'    End If
174	1	'
175	1	'End If
176	0	
177	1	'If msg <> "" Then
178	1	'    MsgBox msg, vbInformation, "Permissions setup"
179	1	'End If
180	0	
181	1	' Alternative way to do this is to check the DB permissions tables for the user
182	1	' using a stored procedure to obtain whether the user has select permissions = RO
183	1	' if update = RW and if delete = Admin
184	0	Dim mydb As DAO.Database
185	0	Dim myq1 As QueryDef
186	0	    Set mydb = CurrentDb
187	0	    Set myq1 = mydb.CreateQueryDef("")
188	0	    myq1.Connect = connStr & ";UID=" & username & ";PWD=" & pwd
189	0	    myq1.ReturnsRecords = True
190	8	    ''myq1.sql = "sp_table_list_with_privileges_for_a_user '%%', 'dbo', null, '" & username & "'"
191	6	    myq1.sql = "sp_table_privilege_overview_for_user '%%', 'dbo', null, '" & username & "'"
192	0	
193	0	    Dim myrs As DAO.Recordset
194	0	    Set myrs = myq1.OpenRecordset
195	2	    ''MsgBox myrs.Fields(0).Value
196	0	    If myrs.Fields(0).Value = "" Then
197	0	        tempVal = "RO"
198	0	        msg = "Your permissions on the database cannot be defined, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
199	0	    Else
200	0	        usr = UCase(myrs.Fields(0).Value)
201	0	        If InStr(usr, "RO") <> 0 Then
202	0	            tempVal = "RO"
203	0	        ElseIf InStr(usr, "ADMIN") <> 0 Then
204	0	            tempVal = "ADMIN"
205	0	        ElseIf InStr(usr, "RW") <> 0 Then
206	0	            tempVal = "RW"
207	0	        Else
208	0	            tempVal = "RO"
209	0	            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
210	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
211	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
212	1	                username & "' does not fall into any of the known types, please update the " & _
213	0	                "SetGeneralPermissions code"
214	0	        End If
215	0	    End If
216	0	    
217	0	    
218	0	myrs.Close
219	0	Set myrs = Nothing
220	0	myq1.Close
221	0	Set myq1 = Nothing
222	0	mydb.Close
223	0	Set mydb = Nothing
224	0	
225	0	If msg <> "" Then
226	0	    MsgBox msg, vbInformation, "Permissions setup"
227	0	End If
228	2	''MsgBox tempVal
229	0	GeneralPermissions = tempVal
230	0	Exit Sub
231	0	
232	0	err_SetGeneralPermissions:
233	0	    GeneralPermissions = "RO"
234	0	    msg = "An error has occurred in the procedure: SetGeneralPermissions " & Chr(13) & Chr(13)
235	0	    msg = msg & "The system is unsure of the rights of your login name so you have been assigned " & _
236	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
237	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
238	1	                username & "' does not fall into any of the known types"
239	0	                
240	0	    MsgBox msg, vbInformation, "Permissions setup"
241	0	    Exit Sub
242	0	
243	0	
244	0	End Sub
245	0	Function GetGeneralPermissions()
246	1	'******************************************************************************
247	1	' Return the current users status - if its empty call set function to reset
248	1	' but this will reset to RO
249	1	'
250	1	' SAJ v9
251	1	'******************************************************************************
252	0	On Error GoTo err_GetCurrentVersion
253	0	
254	0	    If GeneralPermissions = "" Then
255	0	        SetGeneralPermissions "", "", ""
256	0	    End If
257	0	    
258	0	    GetGeneralPermissions = GeneralPermissions
259	0	
260	0	Exit Function
261	0	
262	0	err_GetCurrentVersion:
263	0	    Call General_Error_Trap
264	0	End Function
265	0	
266	0	Sub RenameLinks()
267	1	'when new tables are linked in from sql server they come with the owner
268	1	'name prefixed to it - remove this. SAJ
269	0	On Error GoTo err_rename
270	0	Dim mydb As DAO.Database, I, newName
271	0	Dim tmptable As TableDef
272	0	Set mydb = CurrentDb
273	0	    
274	0	
275	1	For I = 0 To mydb.TableDefs.Count - 1 'loop the tables collection
276	0	         Set tmptable = mydb.TableDefs(I)
277	0	             
278	0	        If tmptable.Connect <> "" Then
279	0	            Debug.Print tmptable.Name
280	0	            newName = Replace(tmptable.Name, "dbo_", "")
281	0	            tmptable.Name = newName
282	0	            Debug.Print tmptable.Name
283	0	        End If
284	0	Next
285	0	
286	0	Set tmptable = Nothing
287	0	    mydb.Close
288	0	    Set mydb = Nothing
289	0	Exit Sub
290	0	
291	0	err_rename:
292	0	    MsgBox Err.Description
293	1	  '  Resume
294	0	    Exit Sub
295	0	End Sub
