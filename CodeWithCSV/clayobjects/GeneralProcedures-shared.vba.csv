1	0	Option Compare Database
2	0	Option Explicit
3	1	'******************************************************************************
4	1	' New module to hold general procedures that are shared across the diff db -easy to overwrite
5	1	'
6	1	' Intro by SAJ 23/11/05 (on)
7	1	'******************************************************************************
8	0	
9	0	
10	0	
11	0	Sub General_Error_Trap()
12	1	'******************************************************************************
13	1	' Display general error message
14	1	'
15	1	' SAJ
16	1	'******************************************************************************
17	0	
18	0	    MsgBox "The system has encountered an error. The message is as follows:" & Chr(13) & Chr(13) & Err.description & Chr(13) & Chr(13) & "Error Code: " & Err.Number, vbOKOnly, "System Error"
19	0	
20	0	End Sub
21	0	Function GetCurrentVersion()
22	1	'******************************************************************************
23	1	' Return current interface version number - if its empty its empty do not put
24	1	' a trap to go set it as this is directly called by the main menu that appears
25	1	' before the DB links have been checked and validated (therefore if you do this
26	1	' the sql server login error will occur)
27	1	'
28	1	' SAJ
29	1	'******************************************************************************
30	0	On Error GoTo err_GetCurrentVersion
31	0	
32	0	    GetCurrentVersion = VersionNumber
33	0	
34	0	Exit Function
35	0	
36	0	err_GetCurrentVersion:
37	0	    Call General_Error_Trap
38	0	End Function
39	0	
40	0	Function SetCurrentVersion()
41	1	'******************************************************************************
42	1	' Return current interface version number stored in DB
43	1	'
44	1	' SAJ
45	1	'******************************************************************************
46	0	On Error GoTo err_SetCurrentVersion
47	0	
48	0	Dim retVal
49	0	retVal = "v"
50	0	If DBName <> "" Then
51	0	    Dim mydb As Database, myrs As Recordset
52	0	    Dim sql
53	0	    Set mydb = CurrentDb()
54	0	    
55	2	    sql = "SELECT [Version_Num] FROM [Database_Interface_Version_History] WHERE [MDB_Name] = '" & DBName & "' AND not isnull([DATE_RELEASED]) ORDER BY [Version_Num] DESC;"
56	0	    Set myrs = mydb.OpenRecordset(sql, dbOpenSnapshot)
57	0	    
58	2	     '' Dim myrs As New ADODB.Recordset
59	2	   '' myrs.Open sql, CurrentProject.Connection, adOpenKeySet, adLockOptimistic
60	0	    
61	0	    If Not (myrs.BOF And myrs.EOF) Then
62	0	        myrs.MoveFirst
63	0	        retVal = retVal & myrs![Version_num]
64	0	    End If
65	0	    
66	0	    myrs.Close
67	0	    Set myrs = Nothing
68	0	    mydb.Close
69	0	    Set mydb = Nothing
70	0	    
71	0	  
72	0	Else
73	0	    retVal = retVal & "X"
74	0	End If
75	0	
76	0	VersionNumber = retVal
77	0	SetCurrentVersion = retVal
78	0	
79	0	Exit Function
80	0	err_SetCurrentVersion:
81	0	    Call General_Error_Trap
82	0	End Function
83	0	
84	0	Sub SetGeneralPermissions(username, pwd, connStr)
85	1	'******************************************************************************
86	1	' To make the link clearer between whether a user has only read-only rights or
87	1	' read write access this code assigns a global var to flag what it knows.
88	1	' SAJ v9.1
89	1	'******************************************************************************
90	0	On Error GoTo err_SetGeneralPermissions
91	0	
92	0	Dim tempVal, msg, usr
93	0	
94	1	'If the naming convention for users is maintained then the method below should work ok
95	1	' but it is not very safe so replaced below
96	1	'   If username = "" Then
97	1	'        tempVal = "RO"
98	1	'        msg = "Your login name is unknown to the system, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
99	1	'   Else
100	1	'        usr = UCase(username)
101	1	'        If InStr(usr, "RO") <> 0 Or UCase(usr) = "CATALHOYUK" Then
102	1	'            tempVal = "RO"
103	1	'        ElseIf InStr(usr, "ADMIN") <> 0 Or usr = "RICH" Or usr = "MIA" Or usr = "SHAHINA" Or usr = "SARAH" Then
104	1	'            tempVal = "ADMIN"
105	1	'        ElseIf InStr(usr, "RW") <> 0 Then
106	1	'            tempVal = "RW"
107	1	'        Else
108	1	'            tempVal = "RO"
109	1	'            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
110	1	'                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
111	2	'                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
112	2	'                username & "' does not fall into any of the known types, please update the " & _
113	1	'                "SetGeneralPermissions code"
114	1	'        End If
115	1	'
116	1	'    End If
117	0	
118	0	
119	1	' Alternative way to do this is to check the DB permissions tables for the user
120	1	' using a stored procedure to obtain whether the user has select permissions = RO
121	1	' if update = RW and if delete = Admin
122	0	Dim mydb As DAO.Database
123	0	Dim myq1 As QueryDef
124	0	    Set mydb = CurrentDb
125	0	    Set myq1 = mydb.CreateQueryDef("")
126	0	    myq1.Connect = connStr & ";UID=" & username & ";PWD=" & pwd
127	0	    myq1.ReturnsRecords = True
128	8	    ''myq1.sql = "sp_table_list_with_privileges_for_a_user '%%', 'dbo', null, '" & username & "'"
129	6	    myq1.sql = "sp_table_privilege_overview_for_user '%%', 'dbo', null, '" & username & "'"
130	0	
131	0	    Dim myrs As Recordset
132	0	    Set myrs = myq1.OpenRecordset
133	2	    ''MsgBox myrs.Fields(0).Value
134	0	    If myrs.Fields(0).Value = "" Then
135	0	        tempVal = "RO"
136	0	        msg = "Your permissions on the database cannot be defined, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
137	0	    Else
138	0	        usr = UCase(myrs.Fields(0).Value)
139	0	        If InStr(usr, "RO") <> 0 Then
140	0	            tempVal = "RO"
141	0	        ElseIf InStr(usr, "ADMIN") <> 0 Then
142	0	            tempVal = "ADMIN"
143	0	        ElseIf InStr(usr, "RW") <> 0 Then
144	0	            tempVal = "RW"
145	0	        Else
146	0	            tempVal = "RO"
147	0	            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
148	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
149	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
150	1	                username & "' does not fall into any of the known types, please update the " & _
151	0	                "SetGeneralPermissions code"
152	0	        End If
153	0	    End If
154	0	    
155	0	    
156	0	myrs.Close
157	0	Set myrs = Nothing
158	0	myq1.Close
159	0	Set myq1 = Nothing
160	0	mydb.Close
161	0	Set mydb = Nothing
162	0	
163	0	If msg <> "" Then
164	0	    MsgBox msg, vbInformation, "Permissions setup"
165	0	End If
166	2	''MsgBox tempVal
167	0	GeneralPermissions = tempVal
168	0	Exit Sub
169	0	
170	0	err_SetGeneralPermissions:
171	0	    GeneralPermissions = "RO"
172	0	    msg = "An error has occurred in the procedure: SetGeneralPermissions " & Chr(13) & Chr(13)
173	0	    msg = msg & "The system is unsure of the rights of your login name so you have been assigned " & _
174	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
175	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
176	1	                username & "' does not fall into any of the known types"
177	0	                
178	0	    MsgBox msg, vbInformation, "Permissions setup"
179	0	    Exit Sub
180	0	End Sub
181	0	Function GetGeneralPermissions()
182	1	'******************************************************************************
183	1	' Return the current users status - if its empty call set function to reset
184	1	' but this will reset to RO
185	1	'
186	1	' SAJ v9
187	1	'******************************************************************************
188	0	On Error GoTo err_GetCurrentVersion
189	0	
190	0	    If GeneralPermissions = "" Then
191	0	        SetGeneralPermissions "", "", ""
192	0	    End If
193	0	    
194	0	    GetGeneralPermissions = GeneralPermissions
195	0	
196	0	Exit Function
197	0	
198	0	err_GetCurrentVersion:
199	0	    Call General_Error_Trap
200	0	End Function
201	0	Sub ToggleFormReadOnly(frm As Form, readonly, Optional otherarg)
202	1	'*****************************************************************************
203	1	' To allow a form to toggle between readonly and edit. Changes look of form to
204	1	' reflect its status. Sometimes allowing certain fields to be edited only.
205	1	'
206	1	' Inputs: frm = form name; readonly = T/F; otherarg = additional info on additions, deletions etc
207	1	' SAJ v9.1
208	1	'*****************************************************************************
209	0	Dim ctl As Control, extra
210	0	Dim intI As Integer, intCanEdit As Integer
211	0	Const conTransparent = 0
212	0	Const conWhite = 16777215
213	0	    
214	0	On Error GoTo err_trap
215	0	    
216	0	    If Not IsMissing(otherarg) Then extra = otherarg
217	0	    
218	1	    'if allow edits is set the combo searches dont work - instead locking each control lower down
219	0	    If readonly = True Then
220	0	        With frm
221	0	            If extra <> "Additions" Then .AllowAdditions = False
222	0	            .AllowDeletions = False
223	1	'            .AllowEdits = False
224	0	        End With
225	0	    Else
226	0	        With frm
227	1	            'this next line is added to help with not allowing additions when a filter is set
228	0	            If extra = "NoAdditions" Then .AllowAdditions = False
229	0	            If extra <> "NoAdditions" Then .AllowAdditions = True
230	0	            If extra <> "NoDeletions" Then .AllowDeletions = True
231	1	'            .AllowEdits = True
232	0	        End With
233	0	    End If
234	0	    
235	0	    For Each ctl In frm.Controls
236	0	        With ctl
237	1	            'Debug.Print ctl.Name
238	0	            Select Case .ControlType
239	0	                Case acLabel
240	0	                    .SpecialEffect = acEffectNormal
241	0	                    .BorderStyle = conTransparent
242	0	                Case acTextBox
243	1	                    'there maybe some exceptions on some forms - keep main key editable for newrecords;
244	1	                    'ignore fields that are always locked like mound
245	2	                    ''If ((frm.Name = "Exca: Area Sheet") Or (frm.Name = "Exca: Building Sheet") Or (frm.Name = "Exca: Space Sheet") Or (frm.Name = "Exca: Feature Sheet" And .Name <> "Feature Number") Or (frm.Name = "Exca: Unit Sheet" And .Name <> "Unit Number")) And (.Name <> "Mound") Then
246	0	                     If .Name <> "Mound" And (frm.Name <> "Exca: Feature Sheet" Or (frm.Name = "Exca: Feature Sheet" And .Name <> "Feature Number")) And (frm.Name <> "Exca: Unit Sheet" Or (frm.Name = "Exca: Unit Sheet" And .Name <> "Unit Number")) Then
247	0	                        
248	0	                        If readonly = False Then
249	2	                            ''.SpecialEffect = acEffectSunken
250	1	                            If frm.DefaultView <> 2 Then 'single or continuous
251	0	                                .BackColor = conWhite
252	0	                            Else
253	1	                                frm.DatasheetBackColor = conWhite 'datasheet
254	0	                            End If
255	0	                            .Locked = False
256	0	                        Else
257	2	                            ''.SpecialEffect = acEffectNormal
258	1	                            '.BackColor = frm.Detail.BackColor
259	1	                            If frm.DefaultView <> 2 Then 'single or continuous
260	0	                                .BackColor = frm.Section(0).BackColor
261	0	                            Else
262	1	                                'frm.DatasheetBackColor = frm.Section(0).BackColor
263	1	                                'section color is -2147483633 this will set datasheet to BLACK!!???
264	1	                                'how ever this works - you would not believe how long this took
265	1	                                frm.DatasheetBackColor = RGB(236, 233, 216)   'datasheet
266	0	                            End If
267	0	                            .Locked = True
268	0	                        End If
269	0	                    End If
270	0	                Case acComboBox
271	2	                    'search combo's must not be affected
272	2	                    ''If .Name = "cboCountry" Or InStr(.Name, "Edit") <> 0 Then
273	0	                    If InStr(.Name, "Find") = 0 Then
274	0	                        If readonly = False Then
275	2	                            ''.SpecialEffect = acEffectSunken
276	0	                            .BackColor = conWhite
277	0	                            .Locked = False
278	0	                        Else
279	2	                            ''.SpecialEffect = acEffectNormal
280	1	                            '.BackColor = frm.Detail.BackColor
281	0	                            .BackColor = frm.Section(0).BackColor
282	0	                            .Locked = True
283	0	                        End If
284	0	                    End If
285	0	                Case acSubform, acCheckBox
286	0	                    If readonly = False Then
287	0	                        .Locked = False
288	0	                        .Enabled = True
289	0	                    Else
290	1	                        'put in some extra checks as some subforms are readonly anyway but
291	2	                        'can't be disabled as have buttons off to linking forms
292	1	                        'amendment - just need to set enabled to true and its ok (?)
293	1	                       ' If .Name <> "Exca: subform Features related to Building" And .Name <> "Exca: subform Spaces related to building" Then
294	0	                             .Locked = True
295	1	                             '.Enabled = False
296	0	                             .Enabled = True
297	1	                       ' End If
298	0	                    End If
299	0	                Case acOptionButton
300	0	                    If readonly = False Then
301	0	                        .Locked = False
302	0	                    Else
303	0	                         .Locked = True
304	0	                    End If
305	0	            End Select
306	0	        End With
307	0	    Next ctl
308	0	    
309	0	    Exit Sub
310	0	    
311	0	err_trap:
312	0	        MsgBox "An error occurred setting readonly on/off. Code will resume next line" & Chr(13) & "Error: " & Err.description & " - " & Chr(13), vbInformation, "Error Identified"
313	0	        Resume Next
314	0	    
315	0	End Sub
316	0	
317	0	
318	0	
319	0	
