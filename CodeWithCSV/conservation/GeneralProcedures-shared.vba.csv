1	0	Option Compare Database
2	0	Option Explicit
3	1	'******************************************************************************
4	1	' New module to hold general procedures that are shared across the diff db -easy to overwrite
5	1	'
6	1	' Intro by SAJ v.1 (on)
7	1	'******************************************************************************
8	0	
9	0	Function StartUp()
10	1	'*****************************************************************************
11	1	' All actions necessary to start the system as smoothly as possible
12	1	'
13	1	' SAJ v.1 - actions from autoexac macro plus addition of login/attachment check
14	1	'*****************************************************************************
15	0	On Error GoTo err_startup
16	0	
17	3	''DoCmd.RunCommand acCmdWindowHide 'hide the DB window from prying eyes
18	0	
19	0	DoCmd.OpenForm "Login", acNormal, , , acFormEdit, acDialog
20	0	
21	1	'you can hide the warning messages that Access popups up when
22	1	'you do sql tasks in the background - however the negative side to
23	1	'this is that you hide all these types of message which you may not
24	1	'want to do - the options you have are:
25	2	'   DoCmd.SetWarnings False 'turns off macro msgs
26	1	'   Application.SetOption "Confirm Record Changes", False
27	1	'   Application.SetOption "Confirm Document Deletions", False
28	2	'   Application.SetOption "Confirm Action Queries", False  'this will hide behind the scences sql actions
29	2	'you could of course turn this on an off around each statement - I'm undecided at present
30	0	
31	1	'now the tables are all ok find out the current version
32	0	SetCurrentVersion
33	0	
34	1	'OPEN YOUR MAIN MENU HERE
35	1	DoCmd.OpenForm "Conserv: Basic Record", acNormal, , , acFormPropertySettings 'open main menu
36	0	
37	1	'refresh the main menu so the version number appears - REPLACE WITH YOUR MENU NAME
38	0	Forms![Conserv: Basic Record].Refresh
39	0	
40	0	Exit Function
41	0	
42	0	err_startup:
43	0	    Call General_Error_Trap
44	1	    'now should the system quit out here?
45	1	    'to be decided
46	0	End Function
47	0	
48	0	
49	0	Sub General_Error_Trap()
50	1	'******************************************************************************
51	1	' Display general error message
52	1	'
53	1	' SAJ v.1
54	1	'******************************************************************************
55	0	
56	0	    MsgBox "The system has encountered an error. The message is as follows:" & Chr(13) & Chr(13) & Err.Description & Chr(13) & Chr(13) & "Error Code: " & Err.Number, vbOKOnly, "System Error"
57	0	
58	0	End Sub
59	0	Function GetCurrentVersion()
60	1	'******************************************************************************
61	1	' Return current interface version number - if its empty its empty do not put
62	1	' a trap to go set it as this is directly called by the main menu that appears
63	1	' before the DB links have been checked and validated (therefore if you do this
64	1	' the sql server login error will occur)
65	1	'
66	1	' SAJ v1
67	1	'******************************************************************************
68	0	On Error GoTo err_GetCurrentVersion
69	0	
70	0	    GetCurrentVersion = VersionNumber
71	0	
72	0	Exit Function
73	0	
74	0	err_GetCurrentVersion:
75	0	    Call General_Error_Trap
76	0	End Function
77	0	
78	0	Function SetCurrentVersion()
79	1	'******************************************************************************
80	1	' Return current interface version number stored in DB
81	1	'
82	1	' SAJ v9
83	1	'******************************************************************************
84	0	On Error GoTo err_SetCurrentVersion
85	0	
86	0	Dim retVal
87	0	retVal = "v"
88	0	If DBName <> "" Then
89	0	    Dim mydb As Database, myrs As DAO.Recordset
90	0	    Dim sql
91	0	    Set mydb = CurrentDb()
92	0	
93	0	    
94	2	    sql = "SELECT [Version_Num] FROM [Database_Interface_Version_History] WHERE [MDB_Name] = '" & DBName & "' AND not isnull([DATE_RELEASED]) ORDER BY [Version_Num] DESC;"
95	0	    Set myrs = mydb.OpenRecordset(sql, dbOpenSnapshot)
96	0	    
97	2	     '' Dim myrs As New ADODB.Recordset
98	2	   '' myrs.Open sql, CurrentProject.Connection, adOpenKeySet, adLockOptimistic
99	0	    
100	0	    
101	0	    If Not (myrs.BOF And myrs.EOF) Then
102	0	        myrs.MoveFirst
103	0	        retVal = retVal & myrs![Version_num]
104	0	    End If
105	0	    
106	0	    myrs.Close
107	0	    Set myrs = Nothing
108	0	    mydb.Close
109	0	    Set mydb = Nothing
110	0	    
111	0	  
112	0	Else
113	0	    retVal = retVal & "X"
114	0	End If
115	0	
116	0	VersionNumber = retVal
117	0	SetCurrentVersion = retVal
118	0	
119	0	
120	0	Exit Function
121	0	err_SetCurrentVersion:
122	0	    Call General_Error_Trap
123	0	End Function
124	0	
125	0	Sub SetGeneralPermissions(username, pwd, connStr)
126	1	'******************************************************************************
127	1	' To make the link clearer between whether a user has only read-only rights or
128	1	' read write this code assigns a global var to flag what it knows. If the
129	1	' naming convention for users is maintained then this should work ok
130	1	'
131	1	' Alternative way to do this might be to check the DB permissions tables for
132	1	' each username
133	1	'******************************************************************************
134	0	On Error GoTo err_SetGeneralPermissions
135	0	Dim tempVal, msg, usr
136	0	
137	1	'If username = "" Then
138	1	'    tempVal = "RO"
139	1	'    msg = "Your login name is unknown to the system, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
140	1	'Else
141	1	'    usr = UCase(username)
142	1	'    If InStr(usr, "RO") <> 0 Or UCase(usr) = "CATALHOYUK" Then
143	1	'        tempVal = "RO"
144	1	'    ElseIf InStr(usr, "ADMIN") <> 0 Or usr = "RICH" Or usr = "MIA" Or usr = "SHAHINA" Or usr = "SARAH" Then
145	1	'        tempVal = "ADMIN"
146	1	'    ElseIf InStr(usr, "RW") <> 0 Then
147	1	'        tempVal = "RW"
148	1	'    Else
149	1	 '       tempVal = "RO"
150	1	'        msg = "The system is unsure of the rights of your login name so you have been assigned " & _
151	1	'                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
152	2	'                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
153	2	'                username & "' does not fall into any of the known types, please update the " & _
154	1	'                "SetGeneralPermissions code"
155	1	'    End If
156	1	'
157	1	'End If
158	0	
159	1	'If msg <> "" Then
160	1	'    MsgBox msg, vbInformation, "Permissions setup"
161	1	'End If
162	0	
163	1	' Alternative way to do this is to check the DB permissions tables for the user
164	1	' using a stored procedure to obtain whether the user has select permissions = RO
165	1	' if update = RW and if delete = Admin
166	0	
167	0	Dim mydb As DAO.Database
168	0	Dim myq1 As QueryDef
169	0	    Set mydb = CurrentDb
170	0	    Set myq1 = mydb.CreateQueryDef("")
171	0	    myq1.Connect = connStr & ";UID=" & username & ";PWD=" & pwd
172	0	    myq1.ReturnsRecords = True
173	8	    ''myq1.sql = "sp_table_list_with_privileges_for_a_user '%%', 'dbo', null, '" & username & "'"
174	6	    myq1.sql = "sp_table_privilege_overview_for_user '%%', 'dbo', null, '" & username & "'"
175	0	
176	0	    Dim myrs As DAO.Recordset
177	0	    Set myrs = myq1.OpenRecordset
178	0	    
179	2	    '' debug
180	1	    ' MsgBox myrs.Fields(0).Value
181	0	    
182	0	    If myrs.Fields(0).Value = "" Then
183	0	        tempVal = "RO"
184	0	        msg = "Your permissions on the database cannot be defined, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
185	0	    Else
186	0	        usr = UCase(myrs.Fields(0).Value)
187	0	        If InStr(usr, "RO") <> 0 Then
188	0	            tempVal = "RO"
189	0	        ElseIf InStr(usr, "ADMIN") <> 0 Then
190	0	            tempVal = "ADMIN"
191	0	        ElseIf InStr(usr, "RW") <> 0 Then
192	0	            tempVal = "RW"
193	0	        Else
194	0	            tempVal = "RO"
195	0	            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
196	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
197	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
198	1	                username & "' does not fall into any of the known types, please update the " & _
199	0	                "SetGeneralPermissions code"
200	0	        End If
201	0	    End If
202	0	    
203	0	    
204	0	myrs.Close
205	0	Set myrs = Nothing
206	0	myq1.Close
207	0	Set myq1 = Nothing
208	0	mydb.Close
209	0	Set mydb = Nothing
210	0	
211	0	If msg <> "" Then
212	0	    MsgBox msg, vbInformation, "Permissions setup"
213	0	End If
214	0	
215	2	'' debug
216	1	' MsgBox tempVal
217	0	
218	0	GeneralPermissions = tempVal
219	0	Exit Sub
220	0	
221	0	err_SetGeneralPermissions:
222	0	    GeneralPermissions = "RO"
223	0	    msg = "An error has occurred in the procedure: SetGeneralPermissions " & Chr(13) & Chr(13)
224	0	    msg = msg & "The system is unsure of the rights of your login name so you have been assigned " & _
225	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
226	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
227	1	                username & "' does not fall into any of the known types"
228	0	                
229	0	    MsgBox msg, vbInformation, "Permissions setup"
230	0	    Exit Sub
231	0	
232	0	
233	0	End Sub
234	0	Function GetGeneralPermissions()
235	1	'******************************************************************************
236	1	' Return the current users status - if its empty call set function to reset
237	1	' but this will reset to RO
238	1	'
239	1	' SAJ v9
240	1	'******************************************************************************
241	0	On Error GoTo err_GetCurrentVersion
242	0	
243	0	    If GeneralPermissions = "" Then
244	0	        SetGeneralPermissions "", "", ""
245	0	    End If
246	0	    
247	0	    GetGeneralPermissions = GeneralPermissions
248	0	
249	0	Exit Function
250	0	
251	0	err_GetCurrentVersion:
252	0	    Call General_Error_Trap
253	0	End Function
254	0	
255	0	Public Function ConcatRelated(strField As String, strTable As String, Optional strWhere As String, Optional strOrder As String, Optional strSeparator = ", ") As Variant
256	0	On Error GoTo err_ConcatRelated
257	0	
258	0	Dim rs, rsMV As DAO.Recordset
259	0	Dim strSQL, strOUT As String
260	0	Dim lnglen As Long
261	0	Dim bismultivalue As Boolean
262	0	
263	0	ConcatRelated = Null
264	0	
265	0	strSQL = "SELECT " & strField & " FROM " & strTable
266	0	If strWhere <> vbNullString Then
267	0	    strSQL = strSQL & " WHERE " & strWhere
268	0	End If
269	0	If strOrder <> vbNullString Then
270	0	    strSQL = strSQL & " ORDER BY " & strOrder
271	0	End If
272	0	
273	0	Set rs = DBEngine(0)(0).OpenRecordset(strSQL, dbOpenDynaset)
274	0	bismultivalue = (rs(0).Type > 100)
275	0	
276	0	Do While Not rs.EOF
277	0	    If bismultivalue Then
278	0	        Set rsMV = rs(0).Value
279	0	        Do While Not rsMV.EOF
280	0	            If Not IsNull(rsMV(0)) Then
281	0	                strOUT = strOUT & rsMV(0) & strSeparator
282	0	            End If
283	0	            rsMV.MoveNext
284	0	        Loop
285	0	        Set rsMV = Nothing
286	0	    ElseIf Not IsNull(rs(0)) Then
287	0	        strOUT = strOUT & rs(0) & strSeparator
288	0	    End If
289	0	    rs.MoveNext
290	0	Loop
291	0	rs.Close
292	0	
293	0	lnglen = Len(strOUT) - Len(strSeparator)
294	0	If lnglen > 0 Then
295	0	    ConcatRelated = Left(strOUT, lnglen)
296	0	End If
297	0	
298	0	Exit_Handler:
299	0	Set rsMV = Nothing
300	0	Set rs = Nothing
301	0	Exit Function
302	0	
303	0	err_ConcatRelated:
304	0	    Call General_Error_Trap
305	0	    Resume Exit_Handler
306	0	End Function
307	0	
