1	0	Option Compare Database
2	0	Option Explicit
3	0	
4	0	Sub Close_Feature_Sheet_Click()
5	1	'CONTROL NOT SEEM TO EXIST - SAJ v9.1
6	1	'On Error GoTo Err_Close_Feature_Sheet_Click
7	1	'
8	1	'
9	1	'    DoCmd.close
10	1	'
11	1	'Exit_Close_Feature_Sheet_Click:
12	1	'    Exit Sub
13	1	'
14	1	'Err_Close_Feature_Sheet_Click:
15	1	'    MsgBox Err.Description
16	1	'    Resume Exit_Close_Feature_Sheet_Click
17	1	'
18	0	End Sub
19	0	
20	0	Private Sub Building_AfterUpdate()
21	1	'***********************************************************************
22	1	' Intro of a validity check to ensure building num entered here is ok
23	1	' if not tell the user and allow them to enter. SF not want it to restrict
24	1	' entry and trusts excavators to enter building num when they can
25	1	'
26	1	' SAJ v9.1
27	1	'***********************************************************************
28	0	On Error GoTo err_Building_AfterUpdate
29	0	
30	0	Dim checknum, msg, retval
31	0	
32	0	If Me![Building] <> "" Then
33	1	    'first check its valid
34	0	    If IsNumeric(Me![Building]) Then
35	0	    
36	1	        'check that building num does exist
37	0	        checknum = DLookup("[Number]", "[Exca: Building Details]", "[Number] = " & Me![Building])
38	0	        If IsNull(checknum) Then
39	0	            msg = "This Building Number DOES NOT EXIST in the database, you must remember to enter it."
40	0	            msg = msg & Chr(13) & Chr(13) & "Would you like to enter it now?"
41	0	            retval = MsgBox(msg, vbInformation + vbYesNo, "Building Number does not exist")
42	0	        
43	0	            If retval = vbNo Then
44	1	                MsgBox "Ok, but you must remember to enter it soon otherwise you'll be chased!", vbExclamation, "Remember!"
45	0	            Else
46	0	                DoCmd.OpenForm "Exca: Building Sheet", acNormal, , , acFormAdd, acDialog, "NEW,Num:" & Me![Building] & ",Area:" & Me![Combo27]
47	0	            End If
48	0	        Else
49	1	            'valid number, enable view button
50	0	            Me![cmdGoToBuilding].Enabled = True
51	0	        End If
52	0	    
53	0	    Else
54	1	        'not a vaild numeric building number
55	0	        MsgBox "The Building number is invalid, please enter a numeric value only", vbInformation, "Invalid Entry"
56	0	    End If
57	0	End If
58	0	
59	0	Exit Sub
60	0	
61	0	err_Building_AfterUpdate:
62	0	    Call General_Error_Trap
63	0	    Exit Sub
64	0	
65	0	End Sub
66	0	
67	0	Private Sub cboFindFeature_AfterUpdate()
68	1	'********************************************
69	1	'Find the selected feature number from the list
70	1	'
71	1	'SAJ v9.1
72	1	'********************************************
73	0	On Error GoTo err_cboFindFeature_AfterUpdate
74	0	
75	0	    If Me![cboFindFeature] <> "" Then
76	1	        'for existing number the field with be disabled, enable it as when find num
77	1	        'is shown the on current event will deal with disabling it again
78	0	        If Me![Feature Number].Enabled = False Then Me![Feature Number].Enabled = True
79	0	        DoCmd.GoToControl "Feature Number"
80	0	        DoCmd.FindRecord Me![cboFindFeature]
81	0	        Me![cboFindFeature] = ""
82	0	    End If
83	0	Exit Sub
84	0	
85	0	err_cboFindFeature_AfterUpdate:
86	0	    Call General_Error_Trap
87	0	    Exit Sub
88	0	End Sub
89	0	
90	0	Private Sub cboFindFeature_NotInList(NewData As String, response As Integer)
91	1	'stop not in list msg loop - 2009
92	0	On Error GoTo err_cbofindNot
93	0	
94	0	    MsgBox "Sorry this Feature cannot be found in the list", vbInformation, "No Match"
95	0	    response = acDataErrContinue
96	0	    
97	0	    Me![cboFindFeature].Undo
98	0	Exit Sub
99	0	
100	0	err_cbofindNot:
101	0	    Call General_Error_Trap
102	0	    Exit Sub
103	0	End Sub
104	0	
105	0	Private Sub cmdAddNew_Click()
106	1	'********************************************
107	1	'Add a new record
108	1	'
109	1	'SAJ v9.1
110	1	'********************************************
111	0	On Error GoTo err_cmdAddNew_Click
112	0	
113	0	    DoCmd.GoToRecord acActiveDataObject, , acNewRec
114	0	    DoCmd.GoToControl "Feature Number"
115	0	Exit Sub
116	0	
117	0	err_cmdAddNew_Click:
118	0	    Call General_Error_Trap
119	0	    Exit Sub
120	0	End Sub
121	0	
122	0	Private Sub cmdGoToBuilding_Click()
123	1	'***********************************************************
124	1	' Open building form with a filter on the number related
125	1	' to the button. Open as readonly.
126	1	'
127	1	' SAJ v9.1
128	1	'***********************************************************
129	0	On Error GoTo Err_cmdGoToBuilding_Click
130	0	Dim checknum, msg, retval, permiss
131	0	
132	0	If Not IsNull(Me![Building]) Or Me![Building] <> "" Then
133	1	    'check that building num does exist
134	0	    checknum = DLookup("[Number]", "[Exca: Building Details]", "[Number] = " & Me![Building])
135	0	    If IsNull(checknum) Then
136	1	        'number not exist - now see what permissions user has
137	0	        permiss = GetGeneralPermissions
138	0	        If permiss = "ADMIN" Or permiss = "RW" Or permiss = "exsuper" Then
139	0	            msg = "This Building Number DOES NOT EXIST in the database."
140	0	            msg = msg & Chr(13) & Chr(13) & "Would you like to enter it now?"
141	0	            retval = MsgBox(msg, vbInformation + vbYesNo, "Building Number does not exist")
142	0	        
143	0	            If retval = vbNo Then
144	0	                MsgBox "No building record to view, please alert the your team leader about this.", vbExclamation, "Missing Building Record"
145	0	            Else
146	0	                DoCmd.OpenForm "Exca: Building Sheet", acNormal, , , acFormAdd, acDialog, "NEW,Num:" & Me![Building] & ",Area:" & Me![Combo27]
147	0	            End If
148	0	        Else
149	1	            'user is readonly so just tell them record not exist
150	0	            MsgBox "Sorry but this building record has not been added to the system yet, there is no record to view.", vbInformation, "Missing Building Record"
151	0	        End If
152	0	    Else
153	1	        'record exists - open it
154	0	        Dim stDocName As String
155	0	        Dim stLinkCriteria As String
156	0	
157	0	        stDocName = "Exca: Building Sheet"
158	0	    
159	0	        stLinkCriteria = "[Number]= " & Me![Building]
160	1	        'DoCmd.OpenForm stDocName, acNormal, , stLinkCriteria, acFormReadOnly, acDialog, "FILTER"
161	1	        'decided against dialog as can go to other forms from building sheet and if so they would open underneath it
162	0	        DoCmd.OpenForm stDocName, acNormal, , stLinkCriteria, acFormReadOnly, , "FILTER"
163	0	    End If
164	0	    
165	0	End If
166	0	
167	0	Exit Sub
168	0	
169	0	Err_cmdGoToBuilding_Click:
170	0	    Call General_Error_Trap
171	0	    Exit Sub
172	0	End Sub
173	0	
174	0	Private Sub cmdGoToImage_Click()
175	1	'********************************************************************
176	1	' New button for 2009 which allows any available images to be
177	1	' displayed
178	1	' SAJ
179	1	'********************************************************************
180	0	On Error GoTo err_cmdGoToImage_Click
181	0	
182	0	Dim mydb As DAO.Database
183	0	Dim tmptable As TableDef, tblConn, I, msg, fldid
184	0	Set mydb = CurrentDb
185	0	
186	1	    'get the field id for unit in the catalog that matches this year
187	1	    'NEW 2007 method where by portfolio now uses its own sql database
188	0	    Dim myq1 As QueryDef, connStr
189	0	    Set mydb = CurrentDb
190	0	    Set myq1 = mydb.CreateQueryDef("")
191	0	    myq1.Connect = mydb.TableDefs(0).Connect & ";UID=portfolio;PWD=portfolio"
192	0	    myq1.ReturnsRecords = True
193	1	    'myq1.sql = "sp_Portfolio_GetUnitFieldID " & Me![Year]
194	0	    myq1.sql = "sp_Portfolio_GetFeatureFieldID_2009 " & Me![Year]
195	0	    
196	0	    Dim myrs As Recordset
197	0	    Set myrs = myq1.OpenRecordset
198	2	    ''MsgBox myrs.Fields(0).Value
199	0	    If myrs.Fields(0).Value = "" Or myrs.Fields(0).Value = 0 Then
200	0	        fldid = 0
201	0	    Else
202	0	        fldid = myrs.Fields(0).Value
203	0	    End If
204	0	        
205	0	    myrs.Close
206	0	    Set myrs = Nothing
207	0	    myq1.Close
208	0	    Set myq1 = Nothing
209	0	    
210	0	    
211	0	    
212	1	    For I = 0 To mydb.TableDefs.Count - 1 'loop the tables collection
213	0	    Set tmptable = mydb.TableDefs(I)
214	0	             
215	0	    If tmptable.Connect <> "" Then
216	0	        tblConn = tmptable.Connect
217	0	        Exit For
218	0	    End If
219	0	    Next I
220	0	    
221	0	    If tblConn <> "" Then
222	1	        'If InStr(tblConn, "catalsql") = 0 Then
223	0	        If InStr(tblConn, "catalsql") = 0 Then
224	1	            'if on site the image can be loaded from the server directly into Access
225	0	            DoCmd.OpenForm "Image_Display", acNormal, , "[IntValue] = " & Me![Feature Number] & " AND [Field_ID] = " & fldid, acFormReadOnly, acDialog, Me![Year]
226	0	            
227	0	        Else
228	1	            'database is running remotely must access images via internet
229	0	            msg = "As you are working remotely the system will have to display the images in a web browser." & Chr(13) & Chr(13)
230	0	            msg = msg & "At present this part of the website is secure, you must enter following details to gain access:" & Chr(13) & Chr(13)
231	0	            msg = msg & "Username: catalhoyuk" & Chr(13)
232	0	            msg = msg & "Password: SiteDatabase1" & Chr(13) & Chr(13)
233	0	            msg = msg & "When you have finished viewing the images close your browser to return to the database."
234	0	            MsgBox msg, vbInformation, "Photo Web Link"
235	0	            
236	0	            Application.FollowHyperlink (ImageLocationOnWeb & "?field=feature&id=" & Me![Feature Number])
237	0	        End If
238	0	
239	0	    Else
240	0	        
241	0	    End If
242	0	    
243	0	    Set tmptable = Nothing
244	0	    mydb.Close
245	0	    Set mydb = Nothing
246	0	    
247	0	Exit Sub
248	0	
249	0	err_cmdGoToImage_Click:
250	0	    Call General_Error_Trap
251	0	    Exit Sub
252	0	
253	0	End Sub
254	0	
255	0	Private Sub cmdPrintFeatureSheet_Click()
256	0	On Error GoTo err_print
257	0	
258	0	    If Me![Feature Number] <> "" Then
259	0	        DoCmd.OpenReport "R_Feature_Sheet", acViewPreview, , "[feature number] = " & Me![Feature Number]
260	0	    End If
261	0	Exit Sub
262	0	
263	0	err_print:
264	0	    Call General_Error_Trap
265	0	    Exit Sub
266	0	End Sub
267	0	
268	0	Private Sub cmdReportProblem_Click()
269	1	'bring up a popup to allow user to report a problem
270	0	On Error GoTo err_reportprob
271	0	    DoCmd.OpenForm "frm_pop_problemreport", , , , acFormAdd, acDialog, "feature number;" & Me![Feature Number]
272	0	    
273	0	Exit Sub
274	0	
275	0	err_reportprob:
276	0	    Call General_Error_Trap
277	0	    Exit Sub
278	0	End Sub
279	0	
280	0	Private Sub cmdViewFeaturematrix_Click()
281	1	'new season 2014 - open the feature matrix
282	0	On Error GoTo err_ViewFeaturematrix
283	0	
284	0	    Dim Path
285	0	    Dim fname
286	0	    
287	1	    'check if can find sketch image
288	1	    'using global constanst sktechpath Declared in globals-shared
289	1	    'path = "\\catal\Site_Sketches\Features\Sketches"
290	0	    Path = sketchpath2015 & "features\matrices\"
291	0	    Path = Path & "F" & Me![Feature Number] & "*" & ".jpg"
292	0	    
293	0	    fname = Dir(Path & "*", vbNormal)
294	0	    While fname <> ""
295	0	        Debug.Print fname
296	0	        fname = Dir()
297	0	    Wend
298	0	    Path = sketchpath2015 & "features\matrices\" & fname
299	0	    
300	0	    If Dir(Path) = "" Then
301	1	        'directory not exist
302	0	        MsgBox "The sketch plan of this unit has not been scanned in yet.", vbInformation, "No Sketch available to view"
303	0	    Else
304	0	        DoCmd.OpenForm "frm_pop_featurematrix", acNormal, , , acFormReadOnly, , Me![Feature Number]
305	0	    End If
306	0	 
307	0	Exit Sub
308	0	
309	0	err_ViewFeaturematrix:
310	0	    Call General_Error_Trap
311	0	    Exit Sub
312	0	End Sub
313	0	
314	0	Private Sub cmdViewFeaturesketch_Click()
315	1	'new season 2014 - open the feature sketch
316	1	'had not really been implemented in 2014 - starting over in 2015 - DL
317	0	On Error GoTo err_ViewFeaturesketch
318	0	    Dim Path
319	0	    Dim fname
320	0	    
321	1	    'check if can find sketch image
322	1	    'using global constanst sktechpath Declared in globals-shared
323	1	    'path = "\\catal\Site_Sketches\Features\Sketches"
324	0	    Path = sketchpath2015 & "features\sketches\"
325	0	    Path = Path & "F" & Me![Feature Number] & "*" & ".jpg"
326	0	    fname = Dir(Path & "*", vbNormal)
327	0	    
328	0	    While fname <> ""
329	0	        fname = Dir()
330	0	    Wend
331	0	    Path = sketchpath2015 & "features\sketches\" & fname
332	0	    Debug.Print Path
333	0	    
334	0	    If Dir(Path) = "" Then
335	1	        'directory not exist; convert_all.bat resides in root folder of sketches -
336	1	        'necessary to take it out of the equation - DL 2016
337	0	        MsgBox "The sketch plan of this unit has not been scanned in yet.", vbInformation, "No Sketch available to view"
338	0	    Else
339	0	        DoCmd.OpenForm "frm_pop_featuresketch", acNormal, , , acFormReadOnly, , Me![Feature Number]
340	0	    End If
341	0	 
342	0	Exit Sub
343	0	
344	0	err_ViewFeaturesketch:
345	0	    Call General_Error_Trap
346	0	    Exit Sub
347	0	End Sub
348	0	
349	0	Private Sub Combo27_AfterUpdate()
350	1	'********************************************
351	1	'Update the mound field to reflect the mound
352	1	'associated with the area, mound is now a read
353	1	'only field and users do not have to enter it
354	1	'
355	1	'SAJ v9.1
356	1	'********************************************
357	0	On Error GoTo err_Combo27_AfterUpdate
358	0	
359	0	If Me![Combo27].Column(1) <> "" Then
360	0	    Me![Mound] = Me![Combo27].Column(1)
361	0	End If
362	0	
363	0	Exit Sub
364	0	err_Combo27_AfterUpdate:
365	0	    Call General_Error_Trap
366	0	    Exit Sub
367	0	End Sub
368	0	
369	0	Private Sub Excavation_Click()
370	1	' Existing close form button
371	1	' removed open excavation form (menu) as this form
372	1	' can now be called by other forms
373	1	' SAJ v9.1
374	0	On Error GoTo err_Excavation_Click
375	0	
376	0	    Dim stDocName As String
377	0	    Dim stLinkCriteria As String
378	0	
379	1	    'stDocName = "Excavation"
380	1	    'DoCmd.OpenForm stDocName, , , stLinkCriteria
381	0	    DoCmd.Close acForm, "Exca: Feature Sheet"
382	0	    
383	0	Exit_Excavation_Click:
384	0	    Exit Sub
385	0	
386	0	err_Excavation_Click:
387	0	    MsgBox Err.Description
388	0	    Resume Exit_Excavation_Click
389	0	End Sub
390	0	
391	0	
392	0	
393	0	
394	0	Private Sub Feature_Number_AfterUpdate()
395	1	'***********************************************************************
396	1	' Intro of a validity check to ensure duplicate feature numbers not entered
397	1	' which would result in nasty key violation msg back from sql server if not
398	1	' trapped. Duplicates were previously dealt with by an undo at Feature_number_exit,
399	1	' but this undo would blank the whole record with no explaination so trying
400	1	' to explain problem to user here.
401	1	'
402	1	' There is no way to programmatically undo the number field only the whole record
403	1	' this means any data the user has filled out before entering the feature number is lost.
404	1	' In the space and building sheets this was got round by taking a copy of any data
405	1	' in any of the fields, undoing the record to blank the duplicate key and then re-instating
406	2	' the field values for the user so they didn't have to re-type them. However those
407	1	' tables contained far fewer fields than this feature sheet and it would be unweldy
408	1	' to adopt the same approach.
409	1	'
410	1	' Instead a change of data entry approach has been introduced - make the feature number
411	1	' the first value entered and disable all fields until a valid entry is made here.
412	1	'
413	1	' SAJ v9.1
414	1	'***********************************************************************
415	0	On Error GoTo err_Feature_Number_AfterUpdate
416	0	Dim checknum
417	0	
418	0	If Me![Feature Number] <> "" Then
419	1	    'check that feature num not exist
420	0	    checknum = DLookup("[Feature Number]", "[Exca: Features]", "[Feature Number] = " & Me![Feature Number])
421	0	    If Not IsNull(checknum) Then
422	0	        MsgBox "Sorry but the Feature Number " & Me![Feature Number] & " already exists, please enter another number.", vbInformation, "Duplicate Feature Number"
423	0	        
424	0	        If Not IsNull(Me![Feature Number].OldValue) Then
425	1	            'return field to old value if there was one
426	0	            Me![Feature Number] = Me![Feature Number].OldValue
427	0	        Else
428	1	            'oh the joys, to keep the focus on feature have to flip to year then back
429	1	            'otherwise if will ignore you and go straight to year - dont believe me, comment out the gotocontrol year then!
430	0	            DoCmd.GoToControl "Year"
431	0	            DoCmd.GoToControl "Feature Number"
432	0	            Me![Feature Number].SetFocus
433	0	            
434	0	            DoCmd.RunCommand acCmdUndo
435	0	        End If
436	0	    Else
437	1	        'the number does not exist so allow rest of data entry
438	0	        ToggleFormReadOnly Me, False
439	0	    End If
440	0	End If
441	0	
442	1	'if after checks the field has a value hide the enter number msg
443	0	If Me![Feature Number] <> "" Then Me![lblMsg].Visible = False
444	0	Exit Sub
445	0	
446	0	err_Feature_Number_AfterUpdate:
447	0	    Call General_Error_Trap
448	0	    Exit Sub
449	0	End Sub
450	0	
451	0	Private Sub Feature_Number_Exit(Cancel As Integer)
452	1	'*****************************************************
453	1	' This existing code is commented out and replaced by
454	1	' a handling procedure after update - the reason being
455	1	' this blanks all edits to this record done so far with
456	1	' no explaination to the user why, it also use legacy
457	1	' domenuitem.
458	1	' SAJ v9.1
459	1	'*****************************************************
460	1	'On Error GoTo Err_Feature_Number_Exit
461	1	'
462	1	'    Me.Refresh
463	2	'    'DoCmd.Save acTable, "Exca: Unit Sheet"
464	1	'
465	1	'Exit_Feature_Number_Exit:
466	1	'    Exit Sub
467	1	'
468	1	'Err_Feature_Number_Exit:
469	1	'
470	2	'    'MsgBox Err.Description
471	1	'
472	4	'    'MsgBox "This unit already exists in the database. Use the 'Find' button to go to it.", vbOKOnly, "duplicate"
473	1	'    DoCmd.DoMenuItem acFormBar, acEditMenu, 0, , acMenuVer70
474	1	'
475	1	'    Cancel = True
476	1	'
477	1	'    Resume Exit_Feature_Number_Exit
478	0	End Sub
479	0	
480	0	
481	0	
482	0	Private Sub Feature_Type_AfterUpdate()
483	1	'v9.2 SAJ - new feature subtype list must be updated to reflect feature type selection
484	0	On Error GoTo err_Feature_Type
485	0	
486	0	If Me![Feature Type] <> "" Then
487	2	    'remove any previous entry in sub type field as won't match subtypes for new main type
488	0	    Me![cboFeatureSubType] = ""
489	2	    Me![cboFeatureSubType].RowSource = "SELECT [Exca:FeatureSubTypeLOV].FeatureSubType FROM [Exca:FeatureTypeLOV] INNER JOIN [Exca:FeatureSubTypeLOV] ON [Exca:FeatureTypeLOV].FeatureTypeID = [Exca:FeatureSubTypeLOV].FeatureTypeID WHERE ((([Exca:FeatureTypeLOV].FeatureType)='" & Me![Feature Type] & "')) ORDER BY [Exca:FeatureSubTypeLOV].FeatureSubType; "
490	0	    Me![cboFeatureSubType].Requery
491	0	End If
492	0	
493	1	'new 2009 for burials
494	0	If LCase(Me![Feature Type]) = "burial" Then
495	0	    Dim permiss
496	0	    permiss = GetGeneralPermissions
497	0	    If permiss = "ADMIN" Then
498	0	        Me!txtBurialMNI.Enabled = True
499	0	        Me!txtBurialMNI.Enabled = False
500	0	    Else
501	0	        Me!txtBurialMNI.Enabled = False
502	0	        Me!txtBurialMNI.Enabled = True
503	0	    End If
504	0	End If
505	0	
506	0	Exit Sub
507	0	err_Feature_Type:
508	0	    Call General_Error_Trap
509	0	    Exit Sub
510	0	End Sub
511	0	
512	0	Private Sub Form_BeforeUpdate(Cancel As Integer)
513	1	'*******************************************************************
514	1	'Existing date change update - added error trap v9.1
515	1	'
516	1	'Also new requirement - if user edits record but no plan number exists
517	1	'then prompt them
518	1	' v9.1
519	1	'*******************************************************************
520	0	On Error GoTo err_Form_BeforeUpdate
521	0	
522	0	If IsNull(Me![Exca: subform Feature Plans].Form![Graphic Number]) Then
523	1	    'this event will trigger when move to subform, so do not display then
524	1	    'this will mean if a user edits something above dimensions and tab on through
525	1	    'then moves to another record they will not get the message.
526	1	    'but they will get it if a new record thats entered to bottom
527	0	    If Me.ActiveControl.Name <> "Dimensions" And Me.ActiveControl.Name <> "Description" Then
528	0	        MsgBox "There is no Plan number entered for this Feature. Please can you enter one soon", vbInformation, "What is the Plan Number?"
529	0	    End If
530	0	End If
531	0	
532	0	Me![Date changed] = Now()
533	0	Forms![Exca: Feature Sheet]![dbo_Exca: FeatureHistory].Form![lastmodify].Value = Now()
534	0	
535	0	Exit Sub
536	0	
537	0	err_Form_BeforeUpdate:
538	0	    Call General_Error_Trap
539	0	    Exit Sub
540	0	End Sub
541	0	
542	0	Private Sub Form_Current()
543	1	'********************************************
544	1	'Check state of record, if no feature number its
545	1	'ie: new record make all fields read only so user must enter
546	1	' valid feature num before proceeding.
547	1	'
548	1	'This will also be useful when intro more adv security checking
549	1	'
550	1	' New requirement that feature number cannot be edited after entry. This
551	1	' can only be done by an administrator so lock field here
552	1	'SAJ v9.1
553	1	'********************************************
554	0	On Error GoTo err_Form_Current
555	0	
556	2	'If IsNull(Me![Feature Number]) Or Me![Feature Number] = "" Then 'make rest of fields read only
557	2	'    ToggleFormReadOnly Me, True, "Additions" 'code in GeneralProcedures-shared
558	1	'    Me![lblMsg].Visible = True
559	1	'Else
560	1	'    ToggleFormReadOnly Me, False
561	1	'    Me![lblMsg].Visible = False
562	1	'End If
563	0	
564	1	'after general formatting deal with any specifics here
565	1	'    If Me![Building] = "" Or IsNull(Me![Building]) Then
566	1	'        Me![cmdGoToBuilding].Enabled = False
567	1	'    Else
568	1	'        Me![cmdGoToBuilding].Enabled = True
569	1	'    End If
570	0	
571	1	'overall check - is this user RW or admin then set up fields related to if new record or not
572	0	Dim permiss
573	0	permiss = GetGeneralPermissions
574	0	If permiss = "ADMIN" Or permiss = "RW" Or permiss = "exsuper" Then
575	0	    If IsNull(Me![Feature Number]) Or Me![Feature Number] = "" Then
576	1	        'new record so make rest of fields read only
577	1	        ToggleFormReadOnly Me, True, "Additions" 'code in GeneralProcedures-shared
578	0	        Me![lblMsg].Visible = True
579	0	        
580	1	        'no feature number - new record allow entry
581	0	        Me![Feature Number].Locked = False
582	0	        Me![Feature Number].Enabled = True
583	0	        Me![Feature Number].BackColor = 16777215
584	0	        Me![Feature Number].SetFocus
585	0	    Else
586	1	        'if coming in as a filter thats readonly then send in extra arg
587	0	        If Me.FilterOn = True And Me.AllowEdits = False Then
588	1	            'when popped up the building form this was allowing new records to be added, altered to fix
589	1	            'ToggleFormReadOnly Me, False, "NoAdditions"
590	0	            ToggleFormReadOnly Me, True, "NoAdditions"
591	0	        Else
592	1	            'if a filter is on remember no additions
593	0	            If Me.FilterOn Then
594	0	                ToggleFormReadOnly Me, False, "NoAdditions"
595	0	            Else
596	2	                'SAJ season 2006 - don't allow deletions from this screen
597	0	                ToggleFormReadOnly Me, False, "NoDeletions"
598	0	            End If
599	1	            'feature number exists, lock field
600	0	            Me![Year].SetFocus
601	0	            Me![Feature Number].Locked = True
602	0	            Me![Feature Number].Enabled = False
603	0	            Me![Feature Number].BackColor = Me.Section(0).BackColor
604	0	        End If
605	0	        Me![lblMsg].Visible = False
606	0	    End If
607	0	
608	0	End If
609	1	    'after general formatting deal with any specifics here
610	1	    'moved into subform
611	1	    'If Me![Building] = "" Or IsNull(Me![Building]) Then
612	1	    '    Me![cmdGoToBuilding].Enabled = False
613	1	    'Else
614	1	    '    Me![cmdGoToBuilding].Enabled = True
615	1	    'End If
616	0	
617	0	    If Me.FilterOn = True Or Me.AllowEdits = False Then
618	1	        'disable find and add new in this instance
619	0	        Me![cboFindFeature].Enabled = False
620	0	        Me![cmdAddNew].Enabled = False
621	0	    Else
622	0	        If Me![cboFindFeature].Enabled Then DoCmd.GoToControl "cboFindFeature"
623	0	    End If
624	0	    
625	1	    'Me![Feature Number].SetFocus
626	0	    
627	1	'v9.2 SAJ - new feature subtype dependant on feature main type - keep subtype combo linked with main type
628	2	Me![cboFeatureSubType].RowSource = "SELECT [Exca:FeatureSubTypeLOV].FeatureSubType FROM [Exca:FeatureTypeLOV] INNER JOIN [Exca:FeatureSubTypeLOV] ON [Exca:FeatureTypeLOV].FeatureTypeID = [Exca:FeatureSubTypeLOV].FeatureTypeID WHERE ((([Exca:FeatureTypeLOV].FeatureType)='" & Me![Feature Type] & "')) ORDER BY [Exca:FeatureSubTypeLOV].FeatureSubType; "
629	1	'Me![cboFeatureSubType].Requery
630	0	
631	2	''LATE AUGUST 2009 SEASON
632	2	''We have recurring Error 52 Bad File name messages popping up until user UpdateDatabases, it will work a while
633	2	''and then reappear - is this related to this network call = timeout/corruption? Taking it out for now
634	2	''to see, when user presses button they will take pot luck on there being images
635	3	'''new 2009
636	3	'''find out is any images available
637	0	Dim imageCount, Imgcaption
638	2	''
639	2	''Dim mydb As DAO.Database
640	2	''Dim myq1 As QueryDef, connStr
641	2	''    Set mydb = CurrentDb
642	2	''    Set myq1 = mydb.CreateQueryDef("")
643	2	''    myq1.Connect = mydb.TableDefs(0).Connect & ";UID=portfolio;PWD=portfolio"
644	2	''    myq1.ReturnsRecords = True
645	6	''   myq1.sql = "sp_Portfolio_CountImagesForFeature_2009 '" & Me![Feature Number] & "', ''"
646	2	''
647	2	''    Dim myrs As Recordset
648	2	''   Set myrs = myq1.OpenRecordset
649	4	''    ''MsgBox myrs.Fields(0).Value
650	2	''    If myrs.Fields(0).Value = "" Or myrs.Fields(0).Value = 0 Then
651	2	''           imageCount = 0
652	2	''    Else
653	2	''        imageCount = myrs.Fields(0).Value
654	2	''   End If
655	2	''
656	2	''myrs.close
657	2	''Set myrs = Nothing
658	2	''
659	0	
660	0	backhere:
661	2	''myq1.close
662	2	''Set myq1 = Nothing
663	2	''mydb.close
664	2	''Set mydb = Nothing
665	2	''
666	2	''If imageCount > 0 Then
667	2	''    Imgcaption = imageCount
668	2	''    If imageCount = 1 Then
669	2	''        Imgcaption = Imgcaption & " Image to Display"
670	2	''    Else
671	2	''        Imgcaption = Imgcaption & " Images to Display"
672	2	''    End If
673	2	''    Me![cmdGoToImage].Caption = Imgcaption
674	2	''    Me![cmdGoToImage].Enabled = True
675	2	''Else
676	2	''    Me![cmdGoToImage].Caption = "No Image to Display"
677	2	''    Me![cmdGoToImage].Enabled = False
678	2	''End If
679	0	Imgcaption = "Images of Feature"
680	0	Me![cmdGoToImage].Caption = Imgcaption
681	0	Me![cmdGoToImage].Enabled = True
682	0	
683	3	'''OFFSITE 2009 - ignore photos and sketches offsite
684	3	'''JUST TAKE THIS LINE OUT ON SITE TO RETRIEVE FUNCTIONALITY
685	2	''Me![cmdGoToImage].Enabled = False
686	0	    
687	1	'new 2009 - lock up burial mni for everyone apart from admin
688	0	If permiss = "ADMIN" And LCase(Me![Feature Type]) = "burial" Then
689	0	    Me!txtBurialMNI.Enabled = True
690	0	    Me!txtBurialMNI.Locked = False
691	0	Else
692	0	    Me!txtBurialMNI.Enabled = False
693	0	    Me!txtBurialMNI.Locked = True
694	0	End If
695	0	Exit Sub
696	0	
697	0	err_Form_Current:
698	1	    If Err.Number = 3146 Then 'odbc call failed, crops up every so often on all
699	1	    'sheets bar unit and have NO idea why except it always starts with building with no photos
700	1	    'but not all time, it occurs on Set myrs1 = myq1.OpenRecordset statement, tried everything
701	1	    '    Resume Next
702	0	        imageCount = "?"
703	0	        GoTo backhere
704	0	    Else
705	0	        Call General_Error_Trap
706	0	        Exit Sub
707	0	    End If
708	0	End Sub
709	0	
710	0	
711	0	
712	0	
713	0	Private Sub Form_Error(DataErr As Integer, response As Integer)
714	1	'************************************************************************
715	1	' This can catch runtime errors and intercept with a nicer message
716	1	'
717	1	' SAJ v9.1
718	1	'************************************************************************
719	0	Dim msg
720	0	
721	0	If DataErr = 3162 Then
722	1	    'received this msg for invalid field entry of null
723	1	    ' eg: enter new feature number then delete it
724	0	    msg = "An error has occurred: invalid entry in the current field, probably a null value." & Chr(13) & Chr(13)
725	0	    msg = msg & "The system will attempt to resolve this, please re-try the action, but if you continue to get an error press the ESC key."
726	0	    MsgBox msg, vbInformation, "Error encountered"
727	0	    response = acDataErrContinue
728	0	    SendKeys "{ESC}"
729	0	    SendKeys "{ESC}"
730	0	ElseIf DataErr = 3146 Then
731	1	    'FIX: added 2 sendkey esc above - seems to stop this message
732	1	    'found that despite doing the above when user tries to move to a different record
733	1	    'its still coming back with a sql server error violation of primary
734	3	    'key constriant 'aaaaaExca_Features_PK'
735	1	    'MsgBox DataErr
736	1	    'SendKeys "{ESC}"
737	1	    'SendKeys "{ESC}"
738	0	    DoCmd.RunCommand acCmdUndo
739	0	    response = acDataErrContinue
740	2	    'this stops the error coming up but doesn't take user on to record they requested,
741	1	    'have to press record navigation again - see FIX Above
742	0	End If
743	0	
744	0	End Sub
745	0	
746	0	Private Sub Form_Open(Cancel As Integer)
747	1	'*************************************************************************
748	1	' OpenArg may now be used to set up record for dataentry - specific format
749	1	' must be used:
750	1	' OpenArgs = "NEW,Num:feature num to be entered if known,Area:area assoc if known
751	1	' eg: "NEW,Num:300,Area:west"
752	1	' Then it can be unpicked by code
753	1	'
754	1	' SAJ v9.1
755	1	'*************************************************************************
756	0	On Error GoTo err_Form_Open
757	0	
758	0	    If Not IsNull(Me.OpenArgs) Then
759	0	        Dim getArgs, whatTodo, NumKnown, AreaKnown
760	0	        Dim firstcomma, Action
761	0	        getArgs = Me.OpenArgs
762	0	
763	0	        If Len(getArgs) > 0 Then
764	1	            'get 1st comma to see what action is
765	0	            firstcomma = InStr(getArgs, ",")
766	0	            If firstcomma <> 0 Then
767	1	                'get action word upto 1st comma
768	0	                Action = Left(getArgs, firstcomma - 1)
769	1	                'if new then create new rec - this will cause on current to run
770	0	                If UCase(Action) = "NEW" Then DoCmd.GoToRecord acActiveDataObject, , acNewRec
771	0	    
772	1	                'check term num is present, getting its starting point
773	0	                NumKnown = InStr(UCase(getArgs), "NUM:")
774	0	                If NumKnown <> 0 Then
775	3	                    'num phrase is there so obtain it between 'num:' (ie start pt of num: plus its 4 chars)
776	1	                    'and place of next comma
777	0	                    NumKnown = Mid(getArgs, NumKnown + 4, InStr(NumKnown, getArgs, ",") - (NumKnown + 4))
778	1	                    Me![Feature Number] = NumKnown 'add it to the number fld
779	1	                    Me![Feature Number].Locked = True 'lock the number field
780	1	                  '  DoCmd.RunCommand acCmdSaveRecord
781	0	
782	0	                End If
783	0	
784	1	                'check term area is present, getting its starting point
785	0	                AreaKnown = InStr(UCase(getArgs), "AREA:")
786	0	                If AreaKnown <> 0 Then
787	3	                    'area phrase is there so obtain it between 'area:' (ie start pt of area: plus its 5 chars)
788	1	                    'and end of str
789	0	                    AreaKnown = Mid(getArgs, AreaKnown + 5, Len(getArgs))
790	1	                    Me![Combo27] = AreaKnown 'add it to the area fld
791	0	                    Me![Combo27].Locked = True
792	0	                End If
793	0	            End If
794	0	
795	1	            'disable find and add new in this instance
796	0	            Me![cboFindFeature].Enabled = False
797	0	            Me![cmdAddNew].Enabled = False
798	0	            
799	1	            'creating the new record above will have called on current and set up form
800	2	            'as a new record, it won't have realised a feaure num has gone in and all fields
801	1	            'will still be locked so recall
802	1	            'Call Form_Current
803	0	            ToggleFormReadOnly Me, False
804	0	            Me.AllowAdditions = False
805	0	            Me![lblMsg].Visible = False
806	0	        End If
807	0	    Else
808	1	        'not a new record when opened so
809	1	        'new end of season 2008 to ensure not within record when opened, try and prevent overwriting
810	1	        'moved to current post season
811	1	        'If Me![cboFindFeature].Enabled = True Then DoCmd.GoToControl "cboFindFeature"
812	0	    End If
813	0	    
814	0	    Dim permiss
815	0	    permiss = GetGeneralPermissions
816	0	    If permiss = "ADMIN" Or permiss = "RW" Or permiss = "exsuper" Then
817	2	        ' ToggleFormReadOnly Me, False ' on current will set it up for these users
818	0	    Else
819	1	        'set read only form here, just once
820	0	        ToggleFormReadOnly Me, True
821	0	        Me![cmdAddNew].Enabled = False
822	0	        Me![Feature Number].BackColor = Me.Section(0).BackColor
823	0	        Me![Feature Number].Locked = True
824	0	    End If
825	0	    
826	0	Exit Sub
827	0	
828	0	err_Form_Open:
829	0	    Call General_Error_Trap
830	0	    Exit Sub
831	0	End Sub
832	0	
833	0	
834	0	
835	0	Private Sub go_next_Click()
836	1	'pre-existing button to go to next record
837	0	On Error GoTo Err_go_next_Click
838	0	
839	0	
840	0	    DoCmd.GoToRecord , , acNext
841	0	
842	0	Exit_go_next_Click:
843	0	    Exit Sub
844	0	
845	0	Err_go_next_Click:
846	0	    MsgBox Err.Description
847	0	    Resume Exit_go_next_Click
848	0	End Sub
849	0	
850	0	
851	0	Private Sub go_previous_Click()
852	1	'pre-existing button to go to prev record
853	0	On Error GoTo Err_go_previous_Click
854	0	
855	0	
856	0	    DoCmd.GoToRecord , , acPrevious
857	0	
858	0	Exit_go_previous_Click:
859	0	    Exit Sub
860	0	
861	0	Err_go_previous_Click:
862	0	    MsgBox Err.Description
863	0	    Resume Exit_go_previous_Click
864	0	End Sub
865	0	
866	0	Private Sub go_to_first_Click()
867	1	'pre-existing button to go to first record
868	0	On Error GoTo Err_go_to_first_Click
869	0	
870	0	
871	0	    DoCmd.GoToRecord , , acFirst
872	0	
873	0	Exit_go_to_first_Click:
874	0	    Exit Sub
875	0	
876	0	Err_go_to_first_Click:
877	0	    MsgBox Err.Description
878	0	    Resume Exit_go_to_first_Click
879	0	End Sub
880	0	
881	0	Private Sub go_to_last_Click()
882	1	'pre-existing button to go to last record
883	0	On Error GoTo Err_go_last_Click
884	0	
885	0	
886	0	    DoCmd.GoToRecord , , acLast
887	0	
888	0	Exit_go_last_Click:
889	0	    Exit Sub
890	0	
891	0	Err_go_last_Click:
892	0	    MsgBox Err.Description
893	0	    Resume Exit_go_last_Click
894	0	    
895	0	End Sub
896	0	
897	0	Private Sub Master_Control_Click()
898	3	'THE FORM 'CATAL DATA ENTRY' NO LONGER EXISTS - what was it? - so made invis
899	1	'SAJ v9.1
900	1	'On Error GoTo Err_Master_Control_Click
901	1	'
902	1	'    Dim stDocName As String
903	1	'    Dim stLinkCriteria As String
904	1	'
905	1	'    stDocName = "Catal Data Entry"
906	1	'    DoCmd.OpenForm stDocName, , , stLinkCriteria
907	1	'    DoCmd.close acForm, "Exca: Feature Sheet"
908	1	'
909	1	'Exit_Master_Control_Click:
910	1	'    Exit Sub
911	1	'
912	1	'Err_Master_Control_Click:
913	1	'    MsgBox Err.Description
914	1	'    Resume Exit_Master_Control_Click
915	0	End Sub
916	0	
917	0	
918	0	Private Sub New_entry_Click()
919	1	'CONTROL NOT SEEM TO EXIST - SAJ v9.1
920	1	'On Error GoTo Err_New_entry_Click
921	1	'
922	1	'
923	1	'    DoCmd.GoToRecord , , acNewRec
924	1	'    Mound.SetFocus
925	1	'
926	1	'Exit_New_entry_Click:
927	1	'    Exit Sub
928	1	'
929	1	'Err_New_entry_Click:
930	1	'    MsgBox Err.Description
931	1	'    Resume Exit_New_entry_Click
932	0	End Sub
933	0	
934	0	
935	0	Sub find_feature_Click()
936	1	'REMOVED SAJ v9.1 REPLACE BY CBOFINDFEATURE - DUE TO LEGACY USE OF DOMENUITEM
937	1	'AND DANGER WITH FIND/REPLACE BOX
938	1	'On Error GoTo Err_find_feature_Click
939	1	'
940	1	'
941	1	'   Screen.PreviousControl.SetFocus
942	1	'    Feature_Number.SetFocus
943	1	'    DoCmd.DoMenuItem acFormBar, acEditMenu, 10, , acMenuVer70
944	1	'
945	1	'Exit_find_feature_Click:
946	1	'    Exit Sub
947	1	'
948	1	'Err_find_feature_Click:
949	1	'    MsgBox Err.Description
950	1	'    Resume Exit_find_feature_Click
951	1	'
952	0	End Sub
953	0	
954	0	Private Sub print_bulk_Click()
955	0	On Error GoTo Err_print_bulk_Click
956	0	
957	0	    Dim stDocName As String
958	0	    Dim stLinkCriteria As String
959	0	
960	0	    stDocName = "print_bulk_features"
961	0	    DoCmd.OpenForm stDocName, , , stLinkCriteria
962	0	   
963	2	   '' REMOVED SAJ AS WILL FAIL FOR RO USERS DoCmd.GoToRecord acForm, stDocName, acNewRec
964	0	
965	0	Exit_print_bulk_Click:
966	0	    Exit Sub
967	0	
968	0	Err_print_bulk_Click:
969	0	    Call General_Error_Trap
970	0	    Resume Exit_print_bulk_Click
971	0	End Sub
