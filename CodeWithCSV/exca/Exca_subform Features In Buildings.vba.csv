1	0	Option Compare Database
2	0	Option Explicit
3	1	'**********************************************************
4	1	' This subform is new in version 9.2 - as a feature can be
5	1	' in many Buildings the Building field has been removed from the
6	1	' Feature tables and normalised out int Exca: Features in Buildings
7	1	' SAJ v9.2
8	1	'**********************************************************
9	0	
10	0	
11	0	Private Sub cmdGoToBuilding_Click()
12	1	'***********************************************************************
13	1	' Open Building form read only from here.
14	1	' Also becuase they can enter a Building num that not exist yet (SF requirement)
15	1	' need to see if the record exists before opening the form (otherwise be blank)
16	1	'
17	1	' SAJ v9.2
18	1	'***********************************************************************
19	0	On Error GoTo Err_cmdGoToBuilding_Click
20	0	
21	0	    Dim stDocName As String
22	0	    Dim stLinkCriteria As String
23	0	    Dim checknum, msg, retval, sql, insertArea, permiss
24	0	    
25	0	    stDocName = "Exca: Building Sheet"
26	0	    
27	0	    If Not IsNull(Me![txtIn_Building]) Or Me![txtIn_Building] <> "" Then
28	1	        'check that Building num does exist
29	0	        checknum = DLookup("[Number]", "[Exca: Building Details]", "[Number] = " & Me![txtIn_Building])
30	0	        If IsNull(checknum) Then
31	1	            'number not exist - now see what permissions user has
32	0	            permiss = GetGeneralPermissions
33	0	            If permiss = "ADMIN" Or permiss = "RW" Or permiss = "exsuper" Then
34	0	                msg = "This Building Number DOES NOT EXIST in the database."
35	0	                msg = msg & Chr(13) & Chr(13) & "Would you like to enter it now?"
36	0	                retval = MsgBox(msg, vbInformation + vbYesNo, "Building Number does not exist")
37	0	        
38	0	                If retval = vbNo Then
39	0	                    MsgBox "No Building record to view, please alert the your team leader about this.", vbExclamation, "Missing Building Record"
40	0	                Else
41	1	                    'add new records behind scences
42	0	                    If Forms![Exca: Feature Sheet]![Combo27] <> "" Then
43	2	                        insertArea = "'" & Forms![Exca: Feature Sheet]![Combo27] & "'"
44	0	                    Else
45	0	                        insertArea = Null
46	0	                    End If
47	0	                    sql = "INSERT INTO [Exca: Building Details] ([Number], [Area]) VALUES (" & Me![txtIn_Building] & ", " & insertArea & ");"
48	0	                    DoCmd.RunSQL sql
49	0	                    DoCmd.OpenForm "Exca: Building Sheet", acNormal, , "[Number] = " & Me![txtIn_Building], acFormEdit, acDialog
50	0	                End If
51	0	            Else
52	1	                'user is readonly so just tell them record not exist
53	0	                MsgBox "Sorry but this Building record has not been added to the system yet, there is no record to view.", vbInformation, "Missing Building Record"
54	0	            End If
55	0	        Else
56	1	            'record exists - open it
57	0	            stLinkCriteria = "[Number]=" & Me![txtIn_Building]
58	1	            'DoCmd.OpenForm stDocName, , , stLinkCriteria
59	1	            'DoCmd.OpenForm stDocName, acNormal, , stLinkCriteria, acFormReadOnly, acDialog
60	1	            'decided against dialog as can open other forms on the feature form and they would appear underneath it
61	0	            DoCmd.OpenForm stDocName, acNormal, , stLinkCriteria, acFormReadOnly
62	0	        End If
63	0	    Else
64	0	        MsgBox "No Building number to view", vbInformation, "No Building Number"
65	0	    End If
66	0	    
67	0	Exit_cmdGoToBuilding_Click:
68	0	    Exit Sub
69	0	
70	0	
71	0	Err_cmdGoToBuilding_Click:
72	0	    Call General_Error_Trap
73	0	    Resume Exit_cmdGoToBuilding_Click
74	0	    
75	0	
76	0	End Sub
77	0	
78	0	Private Sub Form_BeforeUpdate(Cancel As Integer)
79	2	''MAY 2009 - building number from space now so this form is now read only
80	1	'Me![Date Changed] = Now()
81	0	End Sub
82	0	
83	0	
84	0	Private Sub Form_Current()
85	1	'v9.2 - enable/disable button depending on contents of Building field
86	0	On Error GoTo err_Current
87	0	    
88	0	    If Me![txtIn_Building] = "" Or IsNull(Me![txtIn_Building]) Then
89	0	        Me![cmdGoToBuilding].Enabled = False
90	0	    Else
91	0	        Me![cmdGoToBuilding].Enabled = True
92	0	    End If
93	0	
94	0	
95	0	Exit Sub
96	0	err_Current:
97	0	    Call General_Error_Trap
98	0	    Exit Sub
99	0	End Sub
100	0	
101	0	Private Sub Form_Open(Cancel As Integer)
102	1	'**********************************************************************
103	1	' Set up form view depending on permissions
104	1	' SAJ v9.1
105	1	' MAY 2009 - building now from space so this is always readonly
106	1	'**********************************************************************
107	0	On Error GoTo err_Form_Open
108	0	
109	1	'    Dim permiss
110	1	'    permiss = GetGeneralPermissions
111	1	'    If permiss = "ADMIN" Or permiss = "RW" Then
112	1	'        ToggleFormReadOnly Me, False
113	1	'    Else
114	2	'        'set read only form here, just once
115	0	        ToggleFormReadOnly Me, True
116	1	'    End If
117	0	Exit Sub
118	0	
119	0	err_Form_Open:
120	0	    Call General_Error_Trap
121	0	    Exit Sub
122	0	End Sub
123	0	
124	0	Private Sub txtIn_Building_AfterUpdate()
125	1	'***********************************************************************
126	1	' Validity check to ensure building num entered here is ok
127	1	' if not tell the user and allow them to enter. SF not want it to restrict
128	1	' entry and trusts excavators to enter building num when they can
129	1	'
130	1	' SAJ v9.2
131	0	
132	1	'***********************************************************************
133	0	On Error GoTo err_txtIn_Space_AfterUpdate
134	0	
135	1	'Dim checknum, msg, retVal, sql, insertArea
136	1	'
137	1	'If Me![txtIn_Building] <> "" Then
138	2	'    'first check its valid
139	1	'    If IsNumeric(Me![txtIn_Building]) Then
140	1	'
141	2	'        'check that Building num does exist
142	1	'        checknum = DLookup("[Number]", "[Exca: Building Details]", "[Number] = " & Me![txtIn_Building])
143	1	'        If IsNull(checknum) Then
144	1	'            msg = "This Building Number DOES NOT EXIST in the database, you must remember to enter it."
145	1	'            msg = msg & Chr(13) & Chr(13) & "Would you like to enter it now?"
146	1	'            retVal = MsgBox(msg, vbInformation + vbYesNo, "Building Number does not exist")
147	1	'
148	1	'            If retVal = vbNo Then
149	2	'                MsgBox "Ok, but you must remember to enter it soon otherwise you'll be chased!", vbExclamation, "Remember!"
150	1	'            Else
151	2	'                'add new records behind scences
152	1	'                If Forms![Exca: Feature Sheet]![Combo27] <> "" Then
153	3	'                    insertArea = "'" & Forms![Exca: Feature Sheet]![Combo27] & "'"
154	1	'                Else
155	1	'                    insertArea = Null
156	1	'                End If
157	1	'                sql = "INSERT INTO [Exca: Building Details] ([Number], [Area]) VALUES (" & Me![txtIn_Building] & ", " & insertArea & ");"
158	1	'                DoCmd.RunSQL sql
159	1	'                DoCmd.OpenForm "Exca: Building Sheet", acNormal, , "[Number] = " & Me![txtIn_Building], acFormEdit, acDialog
160	3	'                ''DoCmd.OpenForm "Exca: Feature Sheet", acNormal, , , acFormAdd, acDialog, "NEW,Num:" & Me![In_feature] & ",Area:" & Forms![Exca: Unit Sheet]![Area]
161	1	'            End If
162	1	'        Else
163	2	'            'valid number, enable view button
164	1	'            Me![cmdGoToBuilding].Enabled = True
165	1	'        End If
166	1	'
167	1	'    Else
168	2	'        'not a vaild numeric Building number
169	1	'        MsgBox "The Building number is invalid, please enter a numeric value only", vbInformation, "Invalid Entry"
170	1	'    End If
171	1	'End If
172	0	
173	0	Exit Sub
174	0	
175	0	err_txtIn_Space_AfterUpdate:
176	0	    Call General_Error_Trap
177	0	    Exit Sub
178	0	End Sub
179	0	
180	0	Private Sub txtIn_Building_BeforeUpdate(Cancel As Integer)
181	2	'new 2009 winter - if a user gets number wrong they can't delete it and many then put 0
182	2	'building 0 keeps appearing and we don't want it so put a check in
183	1	'MAY 2009 - building number from space now so this never happens
184	0	On Error GoTo err_buildingbefore
185	0	
186	1	'If Me![txtIn_Building] = 0 Then
187	1	'        MsgBox "Building 0 is invalid, this entry will be removed", vbInformation, "Invalid Entry"
188	1	'
189	1	'        Cancel = True
190	2	'        'Me![txtIn_Building].Undo
191	2	'        SendKeys "{ESC}" 'seems to need it done 3x
192	1	'        SendKeys "{ESC}"
193	1	'        SendKeys "{ESC}"
194	1	'End If
195	0	Exit Sub
196	0	
197	0	err_buildingbefore:
198	0	    Call General_Error_Trap
199	0	    Exit Sub
200	0	End Sub
201	0	
202	0	
203	0	
