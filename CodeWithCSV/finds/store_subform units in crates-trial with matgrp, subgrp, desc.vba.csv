1	0	Option Compare Database
2	0	Option Explicit
3	0	Private Sub KnownFind()
4	1	'new season 2006 if this find is known to the basic data table then display its material from there
5	0	On Error GoTo err_knownfind
6	0	
7	0	If Me![Unit] <> "" And Me![FindLetter] <> "" And Me![FindNumber] <> "" Then
8	0	    Dim getmaterial, getmaterialsub, getobject, GID
9	0	    GID = Me![Unit] & "." & Me![FindLetter] & Me![FindNumber]
10	0	    
11	2	    getmaterial = DLookup("[MaterialGroupID]", "[Q_Basic_Data_Material_and_Type_with_Text]", "[GID] = '" & GID & "'")
12	0	    If Not IsNull(getmaterial) Then Me![cboMaterialGroup] = getmaterial
13	0	    
14	2	    getmaterialsub = DLookup("[MaterialSubGroupID]", "[Q_Basic_Data_Material_and_Type_with_Text]", "[GID] = '" & GID & "'")
15	0	    If Not IsNull(getmaterialsub) Then Me![cboMaterialSubgroup] = getmaterialsub
16	0	
17	2	    getobject = DLookup("[ObjectTypeID]", "[Q_Basic_Data_Material_and_Type_with_Text]", "[GID] = '" & GID & "'")
18	0	    If Not IsNull(getobject) Then Me![cboDescription] = getobject
19	0	
20	0	End If
21	0	Exit Sub
22	0	
23	0	err_knownfind:
24	0	    Call General_Error_Trap
25	0	    Exit Sub
26	0	End Sub
27	0	
28	0	
29	0	
30	0	Private Sub cboDescription_GotFocus()
31	1	'instead of setting the rowsource in properties set it here to ensure
32	1	'previous records fields stay visible
33	0	On Error GoTo err_cboDescFocus
34	0	
35	0	Dim sql
36	0	sql = " SELECT Finds_Code_MaterialSubGroup_ObjectType.ObjectTypeID, Finds_Code_ObjectTypes.ObjectTypeText, "
37	0	sql = sql & "Finds_Code_MaterialSubGroup_ObjectType.MaterialSubGroupID FROM "
38	0	sql = sql & "Finds_Code_MaterialSubGroup_ObjectType INNER JOIN Finds_Code_ObjectTypes ON "
39	0	sql = sql & "Finds_Code_MaterialSubGroup_ObjectType.ObjectTypeID = Finds_Code_ObjectTypes.ObjectTypeID WHERE "
40	0	sql = sql & "(((Finds_Code_MaterialSubGroup_ObjectType.MaterialSubGroupID)=" & Forms![Store: Crate Register]![Store: subform Units in Crates].Form![cboMaterialSubgroup] & "));"
41	0	Me![cboDescription].RowSource = sql
42	0	
43	0	Exit Sub
44	0	
45	0	err_cboDescFocus:
46	0	    Call General_Error_Trap
47	0	    Exit Sub
48	0	
49	0	End Sub
50	0	
51	0	Private Sub cboMaterialGroup_AfterUpdate()
52	0	On Error GoTo err_cboMat
53	1	'replaced by got focus code of material subgroup
54	1	'Me![cboMaterialSubGroup].Requery
55	0	
56	0	Exit Sub
57	0	
58	0	err_cboMat:
59	0	    Call General_Error_Trap
60	0	    Exit Sub
61	0	End Sub
62	0	
63	0	
64	0	
65	0	Private Sub cboMaterialSubgroup_AfterUpdate()
66	0	On Error GoTo err_cboMaterialSubgroup
67	1	'replaced by got focus code of description
68	1	'Me![cboDescription].Requery
69	0	
70	0	Exit Sub
71	0	
72	0	err_cboMaterialSubgroup:
73	0	    Call General_Error_Trap
74	0	    Exit Sub
75	0	End Sub
76	0	
77	0	Private Sub cboMaterialSubGroup_GotFocus()
78	1	'instead of setting the rowsource in properties set it here to ensure
79	1	'previous records fields stay visible
80	0	On Error GoTo err_cboMatSubGrp
81	0	
82	0	Me![cboMaterialSubgroup].RowSource = "SELECT Finds_Code_MaterialGroup_Subgroup.MaterialSubGroupID, Finds_Code_MaterialGroup_Subgroup.MaterialSubgroupText, Finds_Code_MaterialGroup_Subgroup.MaterialGroupID FROM Finds_Code_MaterialGroup_Subgroup WHERE (((Finds_Code_MaterialGroup_Subgroup.MaterialGroupID)=" & Forms![Store: Crate Register]![Store: subform Units in Crates].Form![cboMaterialGroup] & "));"
83	0	
84	0	Exit Sub
85	0	
86	0	err_cboMatSubGrp:
87	0	    Call General_Error_Trap
88	0	    Exit Sub
89	0	End Sub
90	0	
91	0	Private Sub cboMoveCrate_AfterUpdate()
92	1	'new in season 2006 - move an item to a new crate - SAJ
93	0	On Error GoTo err_cboMove
94	0	
95	0	    If Me![cboMoveCrate] <> "" Then
96	1	        'the move will need to go into a transaction
97	0	        On Error Resume Next
98	0	        Dim mydb As DAO.Database, wrkdefault As Workspace, sql1, sql2, myq As QueryDef
99	0	        Set wrkdefault = DBEngine.Workspaces(0)
100	0	        Set mydb = CurrentDb
101	0	        
102	1	        ' Start of outer transaction.
103	0	        wrkdefault.BeginTrans
104	0	        
105	1	        'insert into new crate
106	0	        sql1 = "INSERT INTO [Store: Units in Crates] "
107	0	        sql1 = sql1 & "( [Crate Number], [Unit number], Bag, [Letter/Number], Material, "
108	0	        sql1 = sql1 & "MaterialSubgroup, Description, Notes, [Year], Area, Studied, "
109	0	        sql1 = sql1 & "CrateNumber, CrateLetter, FindLetter, FindNumber, SampleNumber, "
110	0	        sql1 = sql1 & "FlotNumber, EtutlukNumber, EnvanterNumber, MuseumAccessionNumber, "
111	0	        sql1 = sql1 & "ExportLocation ) "
112	4	        sql1 = sql1 & "SELECT '" & Me![cboMoveCrate] & "' AS 'Crate Number', "
113	0	        sql1 = sql1 & "[Store: Units in Crates].[Unit number], [Store: Units in Crates].Bag, "
114	0	        sql1 = sql1 & "[Store: Units in Crates].[Letter/Number], [Store: Units in Crates].Material, "
115	0	        sql1 = sql1 & "[Store: Units in Crates].MaterialSubgroup, [Store: Units in Crates].Description, "
116	0	        sql1 = sql1 & "[Store: Units in Crates].Notes, [Store: Units in Crates].Year, "
117	0	        sql1 = sql1 & "[Store: Units in Crates].Area, [Store: Units in Crates].Studied, "
118	6	        sql1 = sql1 & Me![cboMoveCrate].Column(2) & " AS 'CrateNumber', '" & Me![cboMoveCrate].Column(1) & "' AS 'CrateLetter', "
119	0	        sql1 = sql1 & "[Store: Units in Crates].FindLetter, [Store: Units in Crates].FindNumber, "
120	0	        sql1 = sql1 & "[Store: Units in Crates].SampleNumber, [Store: Units in Crates].FlotNumber, "
121	0	        sql1 = sql1 & "[Store: Units in Crates].EtutlukNumber, [Store: Units in Crates].EnvanterNumber, "
122	0	        sql1 = sql1 & "[Store: Units in Crates].MuseumAccessionNumber, [Store: Units in Crates].ExportLocation "
123	0	        sql1 = sql1 & "FROM [Store: Units in Crates] "
124	0	        sql1 = sql1 & "WHERE [Store: Units in Crates].rowID = " & Me![rowID] & ";"
125	0	        
126	0	        Set myq = mydb.CreateQueryDef("")
127	0	        myq.sql = sql1
128	0	        myq.Execute
129	0	                
130	0	        myq.Close
131	0	        Set myq = Nothing
132	0	        
133	1	        'delete from here
134	1	        'sql2 = "DELETE FROM [Store: Units in Crates] WHERE [Store: Units in Crates].rowID = " & Me![rowID] & ";"
135	0	        If DeleteCrateRecord(Me![rowID], mydb) = False Then
136	0	            MsgBox "The delete part of this operation has failed", vbCritical, "Operation Failed"
137	0	        End If
138	0	        
139	0	        If Err.Number = 0 Then
140	0	            wrkdefault.CommitTrans
141	0	            MsgBox "Move has been successful"
142	0	            Me.Requery
143	0	            Me![cboMoveCrate] = ""
144	0	        Else
145	0	            wrkdefault.Rollback
146	0	            MsgBox "A problem has occured and the move has been cancelled. The error message is: " & Err.Description
147	0	        End If
148	0	
149	0	        mydb.Close
150	0	        Set mydb = Nothing
151	0	        wrkdefault.Close
152	0	        Set wrkdefault = Nothing
153	0	    
154	0	    End If
155	0	
156	0	Exit Sub
157	0	
158	0	err_cboMove:
159	0	    Call General_Error_Trap
160	0	    Exit Sub
161	0	End Sub
162	0	
163	0	
164	0	Private Sub chkMove_Click()
165	1	'reveal move crate button
166	0	On Error GoTo err_chkmove
167	0	
168	0	    If Me!chkMove = True Then
169	0	        Me![cboMoveCrate].Visible = True
170	0	    Else
171	0	        Me![cboMoveCrate].Visible = False
172	0	    End If
173	0	
174	0	Exit Sub
175	0	
176	0	err_chkmove:
177	0	    Call General_Error_Trap
178	0	    Exit Sub
179	0	End Sub
180	0	
181	0	Private Sub FindLetter_AfterUpdate()
182	0	Call KnownFind
183	0	End Sub
184	0	
185	0	Private Sub FindNumber_AfterUpdate()
186	0	Call KnownFind
187	0	End Sub
188	0	
189	0	Private Sub Form_AfterUpdate()
190	1	'moved from before update - saj season 2006
191	0	On Error GoTo err_afterupdate
192	0	
193	0	    Forms![Store: Crate Register]![Date Changed] = Now()
194	0	
195	0	Exit Sub
196	0	
197	0	err_afterupdate:
198	0	    Call General_Error_Trap
199	0	    Exit Sub
200	0	End Sub
201	0	
202	0	Private Sub Form_BeforeUpdate(Cancel As Integer)
203	1	'again moved to after update
204	1	'Forms![Store: Crate Register]![Date Changed] = Now()
205	0	
206	0	End Sub
207	0	
208	0	Private Sub Form_Current()
209	1	'new season 2006 - the fields shown are dependant on the type of crate
210	0	On Error GoTo err_current
211	0	
212	1	   ' Me![cboMaterialGroup].Requery
213	1	   ' Me![cboMaterialSubGroup].Requery
214	1	   ' Me![cboDescription].Requery
215	0	   
216	0	    Me![EtutlukNumber].Visible = False
217	0	    Me![EnvanterNumber].Visible = False
218	0	    Me![MuseumAccessionNumber].Visible = False
219	0	    Me![ExportLocation].Visible = False
220	0	    Me![Bag].Visible = False
221	0	    Me![Studied].Visible = False
222	0	    Me![txtNotes2].Visible = False
223	0	    Me![lblNotes2].Visible = False
224	0	    Me![txtNotes3].Visible = False
225	0	    Me![lblNotes3].Visible = False
226	0	    Me![lblAdditional].caption = "Notes"
227	0	    Me![lblMuseum].Visible = False
228	0	    
229	0	    If LCase(Forms![Store: Crate Register]![CrateLetter]) = "et" Then
230	1	         'etukluk crates must have an ET prefix
231	0	        Me![EtutlukNumber].Visible = True
232	0	        Me![lblAdditional].caption = "Etukluk No."
233	0	        Me![txtNotes].Visible = False
234	0	        Me![txtNotes3].Visible = False
235	0	        Me![txtNotes2].Visible = True
236	0	        Me![lblNotes2].Visible = True
237	0	    ElseIf LCase(Forms![Store: Crate Register]![CrateLetter]) = "envanter" Then
238	1	        'envanter crates must have envanter prefix
239	0	        Me![EnvanterNumber].Visible = True
240	0	        Me![MuseumAccessionNumber].Visible = True
241	0	        Me![lblMuseum].Visible = True
242	0	        Me![lblAdditional].caption = "Evanter No."
243	0	        Me![txtNotes].Visible = False
244	0	        Me![txtNotes3].Visible = False
245	0	        Me![txtNotes2].Visible = True
246	0	        Me![lblNotes2].Visible = True
247	0	    ElseIf LCase(Forms![Store: Crate Register]![CrateLetter]) = "export" Then
248	1	        'export crates must have export prefix
249	0	        Me![ExportLocation].Visible = True
250	0	        Me![lblAdditional].caption = "Export Location"
251	0	        Me![txtNotes].Visible = False
252	0	        Me![txtNotes3].Visible = False
253	0	        Me![txtNotes2].Visible = True
254	0	        Me![lblNotes2].Visible = True
255	0	    Else
256	1	        'all other crates have same fields apart from two
257	0	        Me![txtNotes].Visible = True
258	0	        
259	0	        If LCase(Forms![Store: Crate Register]![CrateLetter]) = "ob" Then
260	1	            'bag visible for chipped stone
261	0	            Me![Bag].Visible = True
262	0	            Me![txtNotes3].Visible = True
263	0	            Me![lblNotes3].Visible = True
264	0	            Me![txtNotes].Visible = False
265	0	            Me![lblAdditional].caption = "Bag"
266	0	        ElseIf LCase(Forms![Store: Crate Register]![CrateLetter]) = "fb" Then
267	1	            'studied visible for faunal
268	0	            Me![Studied].Visible = True
269	0	            Me![txtNotes3].Visible = True
270	0	            Me![lblNotes3].Visible = True
271	0	            Me![txtNotes].Visible = False
272	0	            Me![lblAdditional].caption = "Studied"
273	0	        End If
274	0	        
275	0	        
276	0	        Me![txtNotes2].Visible = False
277	0	        
278	0	    End If
279	0	Exit Sub
280	0	
281	0	err_current:
282	0	    Call General_Error_Trap
283	0	    Exit Sub
284	0	End Sub
285	0	
286	0	Private Sub Unit_AfterUpdate()
287	2	'need to get area and year from excavation but can't link them in as a subform
288	2	'as this is a continous form. Can't also set the field value on current as this will
289	1	'make all records look the same until you move the focus down the row - instead store
290	1	'the year and area in the units in crates table but grab it automatically from the exca
291	1	'DB when updated
292	1	'saj season 2006
293	0	On Error GoTo err_unit
294	0	
295	0	    If Me![Unit] <> "" Then
296	0	        Dim getarea, getyear
297	0	        getarea = DLookup("[Area]", "[Exca: Unit sheet with relationships]", "[Unit number] = " & Me![Unit])
298	0	        If Not IsNull(getarea) Then
299	0	            Me![Area] = getarea
300	0	        Else
301	0	            MsgBox "The Area field has not been automically obtained from the Excavation database, please check the excavation database directly", vbInformation, "Area Field"
302	0	        End If
303	0	        
304	0	        getyear = DLookup("[Year]", "[Exca: Unit sheet with relationships]", "[Year] = " & Me![Year])
305	0	        If Not IsNull(getyear) Then
306	0	            Me![Year] = getyear
307	0	        Else
308	0	            MsgBox "The Year field has not been automically obtained from the Excavation database, please check the excavation database directly", vbInformation, "Year Field"
309	0	        End If
310	0	    End If
311	0	Exit Sub
312	0	
313	0	err_unit:
314	0	    Call General_Error_Trap
315	0	    Exit Sub
316	0	End Sub
