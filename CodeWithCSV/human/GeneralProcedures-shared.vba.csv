1	0	Option Compare Database
2	0	Option Explicit
3	1	'******************************************************************************
4	1	' New module to hold general procedures that are shared across the diff db -easy to overwrite
5	1	'
6	1	' Intro by SAJ v.9 23/11/05 (on)
7	1	'******************************************************************************
8	0	
9	0	
10	0	
11	0	Sub General_Error_Trap()
12	1	'******************************************************************************
13	1	' Display general error message
14	1	'
15	1	' SAJ v.9
16	1	'******************************************************************************
17	0	
18	0	    MsgBox "The system has encountered an error. The message is as follows:" & Chr(13) & Chr(13) & Err.Description & Chr(13) & Chr(13) & "Error Code: " & Err.Number, vbOKOnly, "System Error"
19	0	
20	0	End Sub
21	0	Function GetCurrentVersion()
22	1	'******************************************************************************
23	1	' Return current interface version number - if its empty its empty do not put
24	1	' a trap to go set it as this is directly called by the main menu that appears
25	1	' before the DB links have been checked and validated (therefore if you do this
26	1	' the sql server login error will occur)
27	1	'
28	1	' SAJ v9
29	1	'******************************************************************************
30	0	On Error GoTo err_GetCurrentVersion
31	0	
32	0	    GetCurrentVersion = VersionNumber
33	0	
34	0	Exit Function
35	0	
36	0	err_GetCurrentVersion:
37	0	    Call General_Error_Trap
38	0	End Function
39	0	
40	0	Function SetCurrentVersion()
41	1	'******************************************************************************
42	1	' Return current interface version number stored in DB
43	1	'
44	1	' SAJ v9
45	1	'******************************************************************************
46	0	On Error GoTo err_SetCurrentVersion
47	0	
48	0	Dim retVal, centralver
49	0	retVal = "v"
50	0	If DBName <> "" Then
51	0	    Dim mydb As DAO.Database, myrs As DAO.Recordset
52	0	    Dim sql, theVersionNumberLocal
53	0	    Set mydb = CurrentDb()
54	0	    
55	2	    sql = "SELECT [Version_Num] FROM [Database_Interface_Version_History] WHERE [MDB_Name] = '" & DBName & "' AND not isnull([DATE_RELEASED]) ORDER BY [Version_Num] DESC;"
56	0	    Set myrs = mydb.OpenRecordset(sql, dbOpenSnapshot)
57	0	    
58	2	     '' Dim myrs As New ADODB.Recordset
59	2	   '' myrs.Open sql, CurrentProject.Connection, adOpenKeySet, adLockOptimistic
60	0	    
61	0	    If Not (myrs.BOF And myrs.EOF) Then
62	0	        myrs.MoveFirst
63	0	        
64	1	        'new 2010
65	0	        centralver = myrs![Version_num]
66	0	        retVal = retVal & myrs![Version_num]
67	0	        
68	1	        'check local constant value held in module Globals-shared to see if this interface
69	1	        'matches current version of central copy, if not tell the user
70	2	        '2009 was a problem on PC's with where comma showing as decimal so try to capture
71	0	        theVersionNumberLocal = VersionNumberLocal
72	0	        If InStr(centralver, ",") > 0 Then centralver = Replace(centralver, ",", ".")
73	0	        If InStr(theVersionNumberLocal, ",") > 0 Then theVersionNumberLocal = Replace(theVersionNumberLocal, ",", ".")
74	0	        
75	0	        If CDbl(centralver) <> CDbl(theVersionNumberLocal) Then
76	0	            Dim msg
77	0	            msg = "There is a new version of the Human Remains database file available. " & Chr(13) & Chr(13) & _
78	2	                    "Please close this copy now and run 'Update Databases.bat' on your desktop or " & _
79	2	                    "copy the file 'Human Remains Central Database.mdb' from G:\" & Year(Date) & " Central Server Databases " & _
80	2	                    " into the 'New Database Files folder' on your desktop." & Chr(13) & Chr(13) & "If you do not do this" & _
81	0	                    " you may experience problems using this database and you will not be able to utilise any new functionaility that has been added." & Chr(13) & Chr(13) & _
82	0	                    "DO NOT DO THIS IF YOU HAVE SAVED ANY NEW QUERIES INTO YOUR DESKTOP COPY OF THE DATABASE."
83	0	                    
84	0	            MsgBox msg, vbExclamation + vbOKOnly, "New version available"
85	0	        End If
86	0	    End If
87	0	    
88	0	    myrs.Close
89	0	    Set myrs = Nothing
90	0	    mydb.Close
91	0	    Set mydb = Nothing
92	0	    
93	0	  
94	0	Else
95	0	    retVal = retVal & "X"
96	0	End If
97	0	
98	0	VersionNumber = retVal
99	0	SetCurrentVersion = retVal
100	0	
101	0	Exit Function
102	0	err_SetCurrentVersion:
103	0	    Call General_Error_Trap
104	0	End Function
105	0	
106	0	Sub SetGeneralPermissions(username, pwd, connStr)
107	1	'******************************************************************************
108	1	' To make the link clearer between whether a user has only read-only rights or
109	1	' read write access this code assigns a global var to flag what it knows.
110	1	' SAJ v9.1
111	1	'******************************************************************************
112	0	On Error GoTo err_SetGeneralPermissions
113	0	
114	0	Dim tempVal, msg, usr
115	0	
116	1	'If the naming convention for users is maintained then the method below should work ok
117	1	' but it is not very safe so replaced below
118	1	'   If username = "" Then
119	1	'        tempVal = "RO"
120	1	'        msg = "Your login name is unknown to the system, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
121	1	'   Else
122	1	'        usr = UCase(username)
123	1	'        If InStr(usr, "RO") <> 0 Or UCase(usr) = "CATALHOYUK" Then
124	1	'            tempVal = "RO"
125	1	'        ElseIf InStr(usr, "ADMIN") <> 0 Or usr = "RICH" Or usr = "MIA" Or usr = "SHAHINA" Or usr = "SARAH" Then
126	1	'            tempVal = "ADMIN"
127	1	'        ElseIf InStr(usr, "RW") <> 0 Then
128	1	'            tempVal = "RW"
129	1	'        Else
130	1	'            tempVal = "RO"
131	1	'            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
132	1	'                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
133	2	'                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
134	2	'                username & "' does not fall into any of the known types, please update the " & _
135	1	'                "SetGeneralPermissions code"
136	1	'        End If
137	1	'
138	1	'    End If
139	0	
140	0	
141	1	' Alternative way to do this is to check the DB permissions tables for the user
142	1	' using a stored procedure to obtain whether the user has select permissions = RO
143	1	' if update = RW and if delete = Admin
144	0	Dim mydb As DAO.Database
145	0	Dim myq1 As QueryDef
146	0	    Set mydb = CurrentDb
147	0	    Set myq1 = mydb.CreateQueryDef("")
148	0	    myq1.Connect = connStr & ";UID=" & username & ";PWD=" & pwd
149	0	    myq1.ReturnsRecords = True
150	8	    ''myq1.sql = "sp_table_list_with_privileges_for_a_user '%%', 'dbo', null, '" & username & "'"
151	6	    myq1.sql = "sp_table_privilege_overview_for_user '%%', 'dbo', null, '" & username & "'"
152	0	
153	0	    Dim myrs As DAO.Recordset
154	0	    Set myrs = myq1.OpenRecordset
155	2	    ''MsgBox myrs.Fields(0).Value
156	0	    If myrs.Fields(0).Value = "" Then
157	0	        tempVal = "RO"
158	0	        msg = "Your permissions on the database cannot be defined, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
159	0	    Else
160	0	        usr = UCase(myrs.Fields(0).Value)
161	0	        If InStr(usr, "RO") <> 0 Then
162	0	            tempVal = "RO"
163	0	        ElseIf InStr(usr, "ADMIN") <> 0 Then
164	0	            tempVal = "ADMIN"
165	0	        ElseIf InStr(usr, "RW") <> 0 Then
166	0	            tempVal = "RW"
167	0	        Else
168	0	            tempVal = "RO"
169	0	            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
170	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
171	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
172	1	                username & "' does not fall into any of the known types, please update the " & _
173	0	                "SetGeneralPermissions code"
174	0	        End If
175	0	    End If
176	0	    
177	0	    
178	0	myrs.Close
179	0	Set myrs = Nothing
180	0	myq1.Close
181	0	Set myq1 = Nothing
182	0	mydb.Close
183	0	Set mydb = Nothing
184	0	
185	0	If msg <> "" Then
186	0	    MsgBox msg, vbInformation, "Permissions setup"
187	0	End If
188	2	''MsgBox tempVal
189	0	GeneralPermissions = tempVal
190	0	Exit Sub
191	0	
192	0	err_SetGeneralPermissions:
193	0	    GeneralPermissions = "RO"
194	0	    msg = "An error has occurred in the procedure: SetGeneralPermissions " & Chr(13) & Chr(13)
195	0	    msg = msg & "The system is unsure of the rights of your login name so you have been assigned " & _
196	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
197	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
198	1	                username & "' does not fall into any of the known types"
199	0	                
200	0	    MsgBox msg, vbInformation, "Permissions setup"
201	0	    Exit Sub
202	0	End Sub
203	0	Function GetGeneralPermissions()
204	1	'******************************************************************************
205	1	' Return the current users status - if its empty call set function to reset
206	1	' but this will reset to RO
207	1	'
208	1	' SAJ v9
209	1	'******************************************************************************
210	0	On Error GoTo err_GetCurrentVersion
211	0	
212	0	    If GeneralPermissions = "" Then
213	0	        SetGeneralPermissions "", "", ""
214	0	    End If
215	0	    
216	0	    GetGeneralPermissions = GeneralPermissions
217	0	
218	0	Exit Function
219	0	
220	0	err_GetCurrentVersion:
221	0	    Call General_Error_Trap
222	0	End Function
223	0	Sub ToggleFormReadOnly(frm As Form, readonly, Optional otherarg)
224	1	'*****************************************************************************
225	1	' To allow a form to toggle between readonly and edit. Changes look of form to
226	1	' reflect its status. Sometimes allowing certain fields to be edited only.
227	1	'
228	1	' Inputs: frm = form name; readonly = T/F; otherarg = additional info on additions, deletions etc
229	1	' SAJ v9.1
230	1	'*****************************************************************************
231	0	Dim ctl As Control, extra
232	0	Dim intI As Integer, intCanEdit As Integer
233	0	Const conTransparent = 0
234	0	Const conWhite = 16777215
235	0	    
236	0	On Error GoTo err_trap
237	0	    
238	0	    If Not IsMissing(otherarg) Then extra = otherarg
239	0	    
240	1	    'if allow edits is set the combo searches dont work - instead locking each control lower down
241	0	    If readonly = True Then
242	0	        With frm
243	0	            If extra <> "Additions" Then .AllowAdditions = False
244	0	            .AllowDeletions = False
245	1	'            .AllowEdits = False
246	0	        End With
247	0	    Else
248	0	        With frm
249	1	            'this next line is added to help with not allowing additions when a filter is set
250	0	            If extra = "NoAdditions" Then .AllowAdditions = False
251	0	            If extra <> "NoAdditions" Then .AllowAdditions = True
252	0	            If extra <> "NoDeletions" Then .AllowDeletions = True
253	1	'            .AllowEdits = True
254	0	        End With
255	0	    End If
256	0	    
257	0	    For Each ctl In frm.Controls
258	0	        With ctl
259	1	            'Debug.Print ctl.Name
260	0	            Select Case .ControlType
261	0	                Case acLabel
262	0	                    .SpecialEffect = acEffectNormal
263	0	                    .BorderStyle = conTransparent
264	0	                Case acTextBox
265	1	                    'there maybe some exceptions on some forms - keep main key editable for newrecords;
266	1	                    'ignore fields that are always locked like mound
267	2	                    ''If ((frm.Name = "Exca: Area Sheet") Or (frm.Name = "Exca: Building Sheet") Or (frm.Name = "Exca: Space Sheet") Or (frm.Name = "Exca: Feature Sheet" And .Name <> "Feature Number") Or (frm.Name = "Exca: Unit Sheet" And .Name <> "Unit Number")) And (.Name <> "Mound") Then
268	0	                     If .Name <> "Mound" And (frm.Name <> "Exca: Feature Sheet" Or (frm.Name = "Exca: Feature Sheet" And .Name <> "Feature Number")) And (frm.Name <> "Exca: Unit Sheet" Or (frm.Name = "Exca: Unit Sheet" And .Name <> "Unit Number")) Then
269	0	                        
270	0	                        If readonly = False Then
271	2	                            ''.SpecialEffect = acEffectSunken
272	1	                            If frm.DefaultView <> 2 Then 'single or continuous
273	0	                                .BackColor = conWhite
274	0	                            Else
275	1	                                frm.DatasheetBackColor = conWhite 'datasheet
276	0	                            End If
277	0	                            .Locked = False
278	0	                        Else
279	2	                            ''.SpecialEffect = acEffectNormal
280	1	                            '.BackColor = frm.Detail.BackColor
281	1	                            If frm.DefaultView <> 2 Then 'single or continuous
282	0	                                .BackColor = frm.Section(0).BackColor
283	0	                            Else
284	1	                                'frm.DatasheetBackColor = frm.Section(0).BackColor
285	1	                                'section color is -2147483633 this will set datasheet to BLACK!!???
286	1	                                'how ever this works - you would not believe how long this took
287	1	                                frm.DatasheetBackColor = RGB(236, 233, 216)   'datasheet
288	0	                            End If
289	0	                            .Locked = True
290	0	                        End If
291	0	                    End If
292	0	                Case acComboBox
293	2	                    'search combo's must not be affected
294	2	                    ''If .Name = "cboCountry" Or InStr(.Name, "Edit") <> 0 Then
295	0	                    If InStr(.Name, "Find") = 0 Then
296	0	                        If readonly = False Then
297	2	                            ''.SpecialEffect = acEffectSunken
298	0	                            .BackColor = conWhite
299	0	                            .Locked = False
300	0	                        Else
301	2	                            ''.SpecialEffect = acEffectNormal
302	1	                            '.BackColor = frm.Detail.BackColor
303	0	                            .BackColor = frm.Section(0).BackColor
304	0	                            .Locked = True
305	0	                        End If
306	0	                    End If
307	0	                Case acSubform, acCheckBox
308	0	                    If readonly = False Then
309	0	                        .Locked = False
310	0	                        .Enabled = True
311	0	                    Else
312	1	                        'put in some extra checks as some subforms are readonly anyway but
313	2	                        'can't be disabled as have buttons off to linking forms
314	1	                        'amendment - just need to set enabled to true and its ok (?)
315	1	                       ' If .Name <> "Exca: subform Features related to Building" And .Name <> "Exca: subform Spaces related to building" Then
316	0	                             .Locked = True
317	1	                             '.Enabled = False
318	0	                             .Enabled = True
319	1	                       ' End If
320	0	                    End If
321	0	                Case acOptionButton
322	0	                    If readonly = False Then
323	0	                        .Locked = False
324	0	                    Else
325	0	                         .Locked = True
326	0	                    End If
327	0	            End Select
328	0	        End With
329	0	    Next ctl
330	0	    
331	0	    Exit Sub
332	0	    
333	0	err_trap:
334	0	        MsgBox "An error occurred setting readonly on/off. Code will resume next line" & Chr(13) & "Error: " & Err.Description & " - " & Chr(13), vbInformation, "Error Identified"
335	0	        Resume Next
336	0	    
337	0	End Sub
338	0	Sub test(KeyAscii As Integer)
339	0	Dim strCharacter As String
340	0	
341	1	    ' Convert ANSI value to character string.
342	1	    'strCharacter = Chr(KeyAscii)
343	1	    ' Convert character to upper case, then to ANSI value.
344	1	    'KeyAscii = Asc(UCase(strCharacter))
345	0	    MsgBox KeyAscii
346	0	End Sub
347	0	
348	0	Sub ListReferences()
349	0	Dim refCurr As Reference
350	0	
351	0	  For Each refCurr In Application.References
352	0	    Debug.Print refCurr.Name & ": " & refCurr.FullPath
353	0	  Next
354	0	
355	0	End Sub
356	0	
357	0	Sub GetRolePermissions()
358	1	'**************************************************************************************
359	1	' This gets the latest set of permissions form each role and stores them in the table
360	1	' Database_Roles_Permissions. Uses the SQL DMO server object
361	1	'
362	1	' SAJ 25/11/2005
363	1	'**************************************************************************************
364	0	Dim oServer, oDatabase, oDatabaserole, oRolePermission, currentTable
365	0	On Error GoTo err_GetPermissionsForRoles
366	0	
367	0	Set oServer = CreateObject("SQLDMO.SQLServer")
368	3	''oServer.LoginSecure = True 'windows auth
369	2	''oServer.Connect "catalsql.arch.cam.ac.uk"
370	0	oServer.LoginSecure = False
371	0	oServer.Connect "catalsql.arch.cam.ac.uk", "catalhoyuk", "catalhoyuk"
372	0	
373	1	' Get and set a database object
374	0	Set oDatabase = oServer.Databases("catalhoyuk")
375	0	
376	1	' Get and set a database role object
377	0	Set oDatabaserole = oDatabase.DatabaseRoles
378	0	
379	0	
380	0	
381	1	' Here is the outer loop for the roles
382	0	For Each oDatabaserole In oDatabase.DatabaseRoles
383	0	    Debug.Print "Role Name: " & oDatabaserole.Name
384	1	    ' Exclude the system roles
385	0	
386	1	        ' Get and set a permissions object - will fail for all db_* roles
387	0	        Set oRolePermission = oDatabaserole.ListObjectPermissions(63)
388	0	        
389	1	        'is only available for user defined roles and will fail on these roles
390	1	        'db_owner,db_accessadmin,db_securityadmin,db_ddladmin,db_backupoperator,db_datareader,db_datawriter,db_denydatareader,db_denydatawriter
391	0	        If Err.Number <> 20551 Then
392	1	            'so no error found for getting this roles permissions
393	0	        
394	0	            On Error GoTo err_GetPermissionsForRoles
395	0	        
396	1	            ' Inner loop for the permission, by object and group
397	0	            For Each oRolePermission In oDatabaserole.ListObjectPermissions(63)
398	1	                'this loop goes through each permission - so check if still referring to same table as last loop
399	0	                currentTable = oRolePermission.ObjectName
400	0	                 Debug.Print oDatabaserole.Name
401	0	                    Debug.Print oRolePermission.ObjectOwner + "." + oRolePermission.ObjectName
402	0	             Next
403	0	        End If
404	2	'    End If 'if dont want the public role this is the IF statement to re-instate
405	0	
406	1	Next 'next database role
407	0	
408	1	' Display if you want
409	1	'MsgBox strMsgText, , "Permission, Object, Group"
410	0	
411	0	cleanup:
412	0	    On Error Resume Next
413	0	    
414	0	    Set oRolePermission = Nothing
415	0	    Set oDatabase = Nothing
416	0	    Set oServer = Nothing
417	1	    'MsgBox count
418	0	Exit Sub
419	0	
420	0	err_GetPermissionsForRoles:
421	1	    'catch ant errors
422	0	    MsgBox Err.Description
423	0	    
424	0	    GoTo cleanup
425	1	    'If Err.Number = 20551 Then
426	1	    '    Exit For
427	1	    'End If
428	0	
429	0	End Sub
