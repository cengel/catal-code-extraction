1	0	Option Compare Database
2	0	Option Explicit
3	1	'******************************************************************************
4	1	' New module to hold general procedures that are shared across the diff db -easy to overwrite
5	1	'
6	1	' Intro by SAJ v.1 (on)
7	1	'******************************************************************************
8	0	
9	0	Function StartUp()
10	1	'*****************************************************************************
11	1	' All actions necessary to start the system as smoothly as possible
12	1	'
13	1	' SAJ v.1 - actions from autoexac macro plus addition of login/attachment check
14	1	'*****************************************************************************
15	0	On Error GoTo err_startup
16	0	
17	3	''DoCmd.RunCommand acCmdWindowHide 'hide the DB window from prying eyes
18	0	
19	0	DoCmd.OpenForm "Login", acNormal, , , acFormEdit, acDialog
20	0	
21	1	'you can hide the warning messages that Access popups up when
22	1	'you do sql tasks in the background - however the negative side to
23	1	'this is that you hide all these types of message which you may not
24	1	'want to do - the options you have are:
25	2	'   DoCmd.SetWarnings False 'turns off macro msgs
26	1	'   Application.SetOption "Confirm Record Changes", False
27	1	'   Application.SetOption "Confirm Document Deletions", False
28	1	   Application.SetOption "Confirm Action Queries", False  'this will hide behind the scences sql actions
29	2	'you could of course turn this on an off around each statement - I'm undecided at present
30	0	
31	1	'now the tables are all ok find out the current version
32	0	SetCurrentVersion
33	0	
34	1	'OPEN YOUR MAIN MENU HERE
35	1	DoCmd.OpenForm "frm_menu", acNormal, , , acFormReadOnly 'open main menu
36	0	
37	1	'refresh the main menu so the version number appears - REPLACE WITH YOUR MENU NAME
38	0	Forms![frm_menu].Refresh
39	0	
40	0	Exit Function
41	0	
42	0	err_startup:
43	0	    Call General_Error_Trap
44	1	    'now should the system quit out here?
45	1	    'to be decided
46	0	End Function
47	0	
48	0	
49	0	Sub General_Error_Trap()
50	1	'******************************************************************************
51	1	' Display general error message
52	1	'
53	1	' SAJ v.1
54	1	'******************************************************************************
55	0	
56	0	    MsgBox "The system has encountered an error. The message is as follows:" & Chr(13) & Chr(13) & Err.DESCRIPTION & Chr(13) & Chr(13) & "Error Code: " & Err.Number, vbOKOnly, "System Error"
57	0	
58	0	End Sub
59	0	Function GetCurrentVersion()
60	1	'******************************************************************************
61	1	' Return current interface version number - if its empty its empty do not put
62	1	' a trap to go set it as this is directly called by the main menu that appears
63	1	' before the DB links have been checked and validated (therefore if you do this
64	1	' the sql server login error will occur)
65	1	'
66	1	' SAJ v1
67	1	'******************************************************************************
68	0	On Error GoTo err_GetCurrentVersion
69	0	
70	0	    GetCurrentVersion = VersionNumber
71	0	
72	0	Exit Function
73	0	
74	0	err_GetCurrentVersion:
75	0	    Call General_Error_Trap
76	0	End Function
77	0	
78	0	Function SetCurrentVersion()
79	1	'******************************************************************************
80	1	' Return current interface version number stored in DB
81	1	'
82	1	' SAJ v9
83	1	'******************************************************************************
84	0	On Error GoTo err_SetCurrentVersion
85	0	
86	0	Dim retVal
87	0	retVal = "v"
88	0	If DBName <> "" Then
89	0	    Dim mydb As Database, myrs As DAO.Recordset
90	0	    Dim sql
91	0	    Set mydb = CurrentDb()
92	0	    
93	2	    sql = "SELECT [Version_Num] FROM [Database_Interface_Version_History] WHERE [MDB_Name] = '" & DBName & "' AND not isnull([DATE_RELEASED]) ORDER BY [Version_Num] DESC;"
94	0	    Set myrs = mydb.OpenRecordset(sql, dbOpenSnapshot)
95	0	    
96	2	     '' Dim myrs As New ADODB.Recordset
97	2	   '' myrs.Open sql, CurrentProject.Connection, adOpenKeySet, adLockOptimistic
98	0	    
99	0	    If Not (myrs.BOF And myrs.EOF) Then
100	0	        myrs.MoveFirst
101	0	        retVal = retVal & myrs![Version_num]
102	0	    End If
103	0	    
104	0	    myrs.Close
105	0	    Set myrs = Nothing
106	0	    mydb.Close
107	0	    Set mydb = Nothing
108	0	    
109	0	  
110	0	Else
111	0	    retVal = retVal & "X"
112	0	End If
113	0	
114	0	VersionNumber = retVal
115	0	SetCurrentVersion = retVal
116	0	
117	0	Exit Function
118	0	err_SetCurrentVersion:
119	0	    Call General_Error_Trap
120	0	End Function
121	0	
122	0	Sub SetGeneralPermissions(username, pwd, connStr)
123	1	'******************************************************************************
124	1	' To make the link clearer between whether a user has only read-only rights or
125	1	' read write this code assigns a global var to flag what it knows. If the
126	1	' naming convention for users is maintained then this should work ok
127	1	'
128	1	' Alternative way to do this might be to check the DB permissions tables for
129	1	' each username
130	1	'******************************************************************************
131	0	On Error GoTo err_SetGeneralPermissions
132	0	Dim tempVal, msg, usr
133	0	
134	1	'If username = "" Then
135	1	'    tempVal = "RO"
136	1	'    msg = "Your login name is unknown to the system, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
137	1	'Else
138	1	'    usr = UCase(username)
139	1	'    If InStr(usr, "RO") <> 0 Or UCase(usr) = "CATALHOYUK" Then
140	1	'        tempVal = "RO"
141	1	'    ElseIf InStr(usr, "ADMIN") <> 0 Or usr = "RICH" Or usr = "MIA" Or usr = "SHAHINA" Or usr = "SARAH" Then
142	1	'        tempVal = "ADMIN"
143	1	'    ElseIf InStr(usr, "RW") <> 0 Then
144	1	'        tempVal = "RW"
145	1	'    Else
146	1	 '       tempVal = "RO"
147	1	'        msg = "The system is unsure of the rights of your login name so you have been assigned " & _
148	1	'                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
149	2	'                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
150	2	'                username & "' does not fall into any of the known types, please update the " & _
151	1	'                "SetGeneralPermissions code"
152	1	'    End If
153	1	'
154	1	'End If
155	0	
156	1	'If msg <> "" Then
157	1	'    MsgBox msg, vbInformation, "Permissions setup"
158	1	'End If
159	0	
160	1	' Alternative way to do this is to check the DB permissions tables for the user
161	1	' using a stored procedure to obtain whether the user has select permissions = RO
162	1	' if update = RW and if delete = Admin
163	0	Dim mydb As DAO.Database
164	0	Dim myq1 As QueryDef
165	0	    Set mydb = CurrentDb
166	0	    Set myq1 = mydb.CreateQueryDef("")
167	0	    myq1.Connect = connStr & ";UID=" & username & ";PWD=" & pwd
168	0	    myq1.ReturnsRecords = True
169	8	    ''myq1.sql = "sp_table_list_with_privileges_for_a_user '%%', 'dbo', null, '" & username & "'"
170	6	    myq1.sql = "sp_table_privilege_overview_for_user '%%', 'dbo', null, '" & username & "'"
171	0	
172	0	    Dim myrs As DAO.Recordset
173	0	    Set myrs = myq1.OpenRecordset
174	2	    ''MsgBox myrs.Fields(0).Value
175	0	    If myrs.Fields(0).Value = "" Then
176	0	        tempVal = "RO"
177	0	        msg = "Your permissions on the database cannot be defined, you have been assigned READ ONLY permissions from now on." & Chr(13) & Chr(13) & "If this is incorrect please re-start the application and then if problems persist contact the Database Administrator."
178	0	    Else
179	0	        usr = UCase(myrs.Fields(0).Value)
180	0	        If InStr(usr, "RO") <> 0 Then
181	0	            tempVal = "RO"
182	0	        ElseIf InStr(usr, "ADMIN") <> 0 Then
183	0	            tempVal = "ADMIN"
184	0	        ElseIf InStr(usr, "RW") <> 0 Then
185	0	            tempVal = "RW"
186	0	        Else
187	0	            tempVal = "RO"
188	0	            msg = "The system is unsure of the rights of your login name so you have been assigned " & _
189	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
190	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
191	1	                username & "' does not fall into any of the known types, please update the " & _
192	0	                "SetGeneralPermissions code"
193	0	        End If
194	0	    End If
195	0	    
196	0	    
197	0	myrs.Close
198	0	Set myrs = Nothing
199	0	myq1.Close
200	0	Set myq1 = Nothing
201	0	mydb.Close
202	0	Set mydb = Nothing
203	0	
204	0	If msg <> "" Then
205	0	    MsgBox msg, vbInformation, "Permissions setup"
206	0	End If
207	2	''MsgBox tempVal
208	0	GeneralPermissions = tempVal
209	0	Exit Sub
210	0	
211	0	err_SetGeneralPermissions:
212	0	    GeneralPermissions = "RO"
213	0	    msg = "An error has occurred in the procedure: SetGeneralPermissions " & Chr(13) & Chr(13)
214	0	    msg = msg & "The system is unsure of the rights of your login name so you have been assigned " & _
215	0	                "READ ONLY permissions on this occassion." & Chr(13) & Chr(13) & "Please contact" & _
216	1	                " the Database Administrator with the following message:" & Chr(13) & Chr(13) & "The login '" & _
217	1	                username & "' does not fall into any of the known types"
218	0	                
219	0	    MsgBox msg, vbInformation, "Permissions setup"
220	0	    Exit Sub
221	0	
222	0	
223	0	End Sub
224	0	Function GetGeneralPermissions()
225	1	'******************************************************************************
226	1	' Return the current users status - if its empty call set function to reset
227	1	' but this will reset to RO
228	1	'
229	1	' SAJ v9
230	1	'******************************************************************************
231	0	On Error GoTo err_GetCurrentVersion
232	0	
233	0	    If GeneralPermissions = "" Then
234	0	        SetGeneralPermissions "", "", ""
235	0	    End If
236	0	    
237	0	    GetGeneralPermissions = GeneralPermissions
238	0	
239	0	Exit Function
240	0	
241	0	err_GetCurrentVersion:
242	0	    Call General_Error_Trap
243	0	End Function
244	0	
